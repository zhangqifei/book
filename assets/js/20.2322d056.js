(window.webpackJsonp=window.webpackJsonp||[]).push([[20],{369:function(s,t,n){"use strict";n.r(t);var a=n(43),e=Object(a.a)({},(function(){var s=this,t=s.$createElement,n=s._self._c||t;return n("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[n("h1",{attrs:{id:"linux必备命令"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#linux必备命令"}},[s._v("#")]),s._v(" Linux必备命令")]),s._v(" "),n("p",[s._v("Linux系统启动默认位字符界面，一般不会启动图形界面，所以应对命令行熟练操作，以便更加高效地管理Linux系统。")]),s._v(" "),n("h2",{attrs:{id:"cd"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#cd"}},[s._v("#")]),s._v(" cd")]),s._v(" "),n("p",[n("code",[s._v("cd")]),s._v(" 命令用来切换工作目录至dirname。 其中dirName表示法可为绝对路径或相对路径。若目录名称省略，则变换至使用者的home directory(也就是刚login时所在的目录)。另外，"),n("code",[s._v("~")]),s._v("也表示为home directory的意思，"),n("code",[s._v(".")]),s._v("则是表示目前所在的目录，"),n("code",[s._v("..")]),s._v("则表示目前目录位置的上一层目录。")]),s._v(" "),n("Badge",{attrs:{text:"实例",type:"tig"}}),s._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",[n("code",[s._v('cd    进入用户主目录；\ncd ~  进入用户主目录；\ncd -  返回进入此目录之前所在的目录；\ncd ..  返回上级目录（若当前目录为"/"，则执行完后还在“/"；".."为上级目录的意思）；\ncd ../..  返回上两级目录；\ncd !$  把上个命令的参数作为cd参数使用。\n')])])]),n("h2",{attrs:{id:"ls"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#ls"}},[s._v("#")]),s._v(" ls")]),s._v(" "),n("p",[s._v("ls命令用来显示目标列表，在Linux中是使用率较高的命令。ls命令的输出信息可以进行彩色加亮显示，以分区不同类型的文件。")]),s._v(" "),n("Badge",{attrs:{text:"实例",type:"tig"}}),s._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",[n("code",[s._v("// 显示当前目录下非隐藏文件与目录\n[root@localhost ~]# ls  \nanaconda-ks.cfg  install.log  install.log.syslog  satools\n")])])]),n("hr"),s._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",[n("code",[s._v("// 显示当前目录下包括隐藏文件在内的所有文件列表\n[root@localhost ~]# ls -a\n.   anaconda-ks.cfg  .bash_logout   .bashrc  install.log         .mysql_history  satools  .tcshrc   .vimrc\n..  .bash_history    .bash_profile  .cshrc   install.log.syslog  .rnd            .ssh     .viminfo\n")])])]),n("hr"),s._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",[n("code",[s._v("// 输出长格式列表\n[root@localhost ~]# ls -1\nanaconda-ks.cfg\ninstall.log\ninstall.log.syslog\nsatools\n")])])]),n("hr"),s._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",[n("code",[s._v("// 显示文件的inode信息索引节点（index inode简称为“inode”）是Linux中一个特殊的概念，\n// 具有相同的索引节点号的两个文本本质上是同一个文件（除文件名不同外）。\n[root@localhost ~]# ls -i -l anaconda-ks.cfg install.log\n2345481 -rw------- 1 root root   859 Jun 11 22:49 anaconda-ks.cfg\n2345474 -rw-r--r-- 1 root root 13837 Jun 11 22:49 install.log\n")])])]),n("hr"),s._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",[n("code",[s._v("// 水平输出文件列表\n[root@localhost /]# ls -m\nbin, boot, data, dev, etc, home, lib, lost+found, media, misc, mnt, opt, proc, root, sbin, selinux, srv, sys, tmp, usr, var\n")])])]),n("hr"),s._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",[n("code",[s._v("// 修改最后一次编辑的文件，最近修改的文件显示在最上面。\n[root@localhost /]# ls -t\ntmp  root  etc  dev  lib  boot  sys  proc  data  home  bin  sbin  usr  var  lost+found  media  mnt  opt  selinux  srv  misc\n")])])]),n("hr"),s._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",[n("code",[s._v("// 显示递归文件\n[root@localhost ~]# ls -R\n.:\nanaconda-ks.cfg  install.log  install.log.syslog  satools\n\n./satools:\nblack.txt  freemem.sh  iptables.sh  lnmp.sh  mysql  php502_check.sh  ssh_safe.sh\n")])])]),n("hr"),s._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",[n("code",[s._v("// 打印文件的UID和GID\n[root@localhost /]# ls -n\ntotal 254\ndrwxr-xr-x   2 0 0  4096 Jun 12 04:03 bin\ndrwxr-xr-x   4 0 0  1024 Jun 15 14:45 boot\n")])])]),n("hr"),s._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",[n("code",[s._v("// 列出文件并标记颜色分类\n[root@localhost nginx-1.2.1]# ls --color=auto\n")])])]),n("h2",{attrs:{id:"cat"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#cat"}},[s._v("#")]),s._v(" cat")]),s._v(" "),n("p",[s._v("cat 命令用于连接文件并打印到标准输出设备上。")]),s._v(" "),n("Badge",{attrs:{text:"实例",type:"tig"}}),s._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",[n("code",[s._v("// 由 1 开始对所有输出的行数编号。\n[root@centos7 ~]# cat -n /etc/fstab \n    1\n    2  #\n    3  # /etc/fstab\n    4  # Created by anaconda on Sun Oct 15 15:19:00 2017\n")])])]),n("hr"),s._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",[n("code",[s._v("// 和 -n 相似，只不过对于空白行不编号。\n[root@centos7 ~]# cat -b /etc/fstab  \n\n    1  #\n    2  # /etc/fstab\n    3  # Created by anaconda on Sun Oct 15 15:19:00 2017\n    4  #\n")])])]),n("hr"),s._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",[n("code",[s._v("// 把 textfile1 的文档内容加上行号后输入 textfile2 这个文档里：\ncat -n textfile1 > textfile2\n")])])]),n("hr"),s._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",[n("code",[s._v("// 把 textfile1 和 textfile2 的文档内容加上行号（空白行不加）之后将内容附加到 textfile3 文档里：\ncat -b textfile1 textfile2 >> textfile3\n")])])]),n("hr"),s._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",[n("code",[s._v("// 清空 /etc/test.txt 文档内容：\ncat /dev/null > /etc/test.txt\n")])])]),n("hr"),s._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",[n("code",[s._v("// cat 也可以用来制作镜像文件。例如要制作软盘的镜像文件，将软盘放好后输入：\ncat /dev/fd0 > OUTFILE\n")])])]),n("hr"),s._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",[n("code",[s._v("// 相反的，如果想把 image file 写到软盘，输入：\ncat IMG_FILE > /dev/fd0\n")])])]),n("blockquote",[n("p",[s._v("注：")]),s._v(" "),n("ol",[n("li",[s._v("OUTFILE 指输出的镜像文件名。")]),s._v(" "),n("li",[s._v("IMG_FILE 指镜像文件。")]),s._v(" "),n("li",[s._v("若从镜像文件写回 device 时，device 容量需与相当。")]),s._v(" "),n("li",[s._v("通常用制作开机磁片。")])])]),s._v(" "),n("h2",{attrs:{id:"echo"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#echo"}},[s._v("#")]),s._v(" echo")]),s._v(" "),n("ol",[n("li",[s._v("echo命令向文件中写入内容，例如:使用echo指令覆盖文件内容，使用echo指令向文件追加内容，使用echo指令往文件中追加制表符。")]),s._v(" "),n("li",[s._v('echo向文件中输出内容的基本方法是使用IO重定向指令">"，默认情况下echo输出到标准输出中，使用">"指令可重定向输出到文件中。')])]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("用法：echo [短选项]... [字符串]...  \n  或：echo 长选项  \n将 string 回显到标准输出。  \n  -n 不尾随换行符  \n  -e 启用解释反斜杠的转义功能  \n  -E 禁用解释反斜杠的转义功能(默认)  \n      --help 显示此帮助信息并退出  \n      --version 显示版本信息并退出  \n若-e 可用，则以下序列即可识别：  \n  \\\\    反斜杠  \n  \\a    响铃声  \n  \\b    会删除字符间的所有空格  *\n  \\c    不再产生新的输出  \n  \\e    转义符    \n  \\f    换页  \n  \\n    新行 * \n  \\r    回车  \n  \\t    水平制表符  \n  \\v    竖直制表符  \n  \\0NNN   字节数以八进制数 NNN (1至3位)表示  \n  \\xHH    字节数以十六进制数 HH (1至2位)表示  \n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br")])]),n("Badge",{attrs:{text:"实例",type:"tig"}}),s._v(" "),n("h4",{attrs:{id:"使用-b-选项"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#使用-b-选项"}},[s._v("#")]),s._v(" 使用'\\b'选项")]),s._v(" "),n("blockquote",[n("p",[s._v("'-e'后带上'\\b'会删除字符间的所有空格。\n注意： Linux中的选项'-e'扮演了转义字符反斜线的翻译器。")])]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('[root@centos7 ~]# echo -e "Tecmint \\bis \\ba \\bcommunity \\bof \\bLinux \\bNerds" \nTecmintisacommunityofLinuxNerds \n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br")])]),n("h4",{attrs:{id:"使用-n-选项"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#使用-n-选项"}},[s._v("#")]),s._v(" 使用'\\n'选项")]),s._v(" "),n("blockquote",[n("p",[s._v("\"-e\"后面的带上'\\n'行会在遇到的地方作为新的一行")])]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('[root@centos7 ~]# echo -e "Tecmint \\nis \\na \\ncommunity \\nof \\nLinux \\nNerds" \nTecmint \nis \na \ncommunity \nof \nLinux \nNerds \n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br")])]),n("h4",{attrs:{id:"使用-t-选项"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#使用-t-选项"}},[s._v("#")]),s._v(" 使用'\\t'选项")]),s._v(" "),n("blockquote",[n("p",[s._v("'-e'后面跟上'\\t'会在空格间加上水平制表符。")])]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('[root@centos7 ~]# echo -e "Tecmint \\tis \\ta \\tcommunity \\tof \\tLinux \\tNerds" \nTecmint     is  a   community   of  Linux   Nerds \n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br")])]),n("h4",{attrs:{id:"也可以同时使用换行-n-与水平制表符-t"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#也可以同时使用换行-n-与水平制表符-t"}},[s._v("#")]),s._v(" 也可以同时使用换行‘\\n‘与水平制表符‘\\t‘")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('[root@centos7 ~]# echo -e "\\n\\tTecmint \\n\\tis \\n\\ta \\n\\tcommunity \\n\\tof \\n\\tLinux \\n\\tNerds" \n \n    Tecmint \n    is \n    a \n    community \n    of \n    Linux \n    Nerds\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br")])]),n("h4",{attrs:{id:"使用-v-选项"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#使用-v-选项"}},[s._v("#")]),s._v(" 使用'\\v'选项")]),s._v(" "),n("blockquote",[n("p",[s._v("'-e'后面跟上'\\v'会加上垂直制表符。")])]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('[root@centos7 ~]# echo -e "\\vTecmint \\vis \\va \\vcommunity \\vof \\vLinux \\vNerds" \n \nTecmint \n        is \n           a \n             community \n                       of \n                          Linux \n                                Nerds \n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br")])]),n("h4",{attrs:{id:"也可以同时使用换行-n-与垂直制表符-v"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#也可以同时使用换行-n-与垂直制表符-v"}},[s._v("#")]),s._v(" 也可以同时使用换行'\\n'与垂直制表符'\\v'")]),s._v(" "),n("blockquote",[n("p",[s._v("注意： 你可以按照你的需求连续使用两个或者多个垂直制表符，水平制表符与换行符。")])]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('[root@centos7 ~]# echo -e "\\n\\vTecmint \\n\\vis \\n\\va \\n\\vcommunity \\n\\vof \\n\\vLinux \\n\\vNerds" \n \n \nTecmint \n \nis \n \na \n \ncommunity \n \nof \n \nLinux \n \nNerds \n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br")])]),n("h4",{attrs:{id:"使用-r-选项"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#使用-r-选项"}},[s._v("#")]),s._v(" 使用'\\r'选项")]),s._v(" "),n("blockquote",[n("p",[s._v("'-e'后面跟上‘\\r’来指定输出中的回车符。（LCTT 译注：会覆写行开头的字符）")])]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('[root@centos7 ~]# echo -e "Tecmint \\ris a community of Linux Nerds" \n \nis a community of Linux Nerds\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br")])]),n("h4",{attrs:{id:"使用-c-选项"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#使用-c-选项"}},[s._v("#")]),s._v(" 使用'\\c'选项")]),s._v(" "),n("blockquote",[n("p",[s._v("'-e'后面跟上'\\c'会抑制输出后面的字符并且最后不会换新行。")])]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('[root@centos7 ~]# echo -e "Tecmint is a community \\cof Linux Nerds" \nTecmint is a community [root@centos7 ~]#\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br")])]),n("h4",{attrs:{id:"n-会在echo完后不会输出新行"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#n-会在echo完后不会输出新行"}},[s._v("#")]),s._v(" '-n'会在echo完后不会输出新行")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('[root@centos7 ~]# echo -n "Tecmint is a community of Linux Nerds" \nTecmint is a community of Linux Nerds[root@centos7 ~]#\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br")])]),n("h4",{attrs:{id:"使用-a-选项"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#使用-a-选项"}},[s._v("#")]),s._v(" 使用'\\a'选项")]),s._v(" "),n("blockquote",[n("p",[s._v("'-e'后面跟上'\\a'选项会听到声音警告。")])]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('[root@centos7 ~]# echo -e "Tecmint is a community of \\aLinux Nerds" \nTecmint is a community of Linux Nerds\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br")])]),n("blockquote",[n("p",[s._v("注意： 在你开始前，请先检查你的音量设置。")])]),s._v(" "),n("h4",{attrs:{id:"使用echo命令打印所有的文件和文件夹（ls命令的替代）"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#使用echo命令打印所有的文件和文件夹（ls命令的替代）"}},[s._v("#")]),s._v(" 使用echo命令打印所有的文件和文件夹（ls命令的替代）")]),s._v(" "),n("blockquote",[n("p",[s._v("比如，让我们假设你想要打印所有的'.sh'文件，使用下面的命令。")])]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("[root@centos7 app]#echo *.sh\nbackup73.sh f1.sh hello.sh scp73.sh systeminfo.sh\n[root@centos7 ~]# echo *  //打印所有与ls相当\nbackup73.sh etc f1.sh hello.sh scp73.sh systeminfo.sh wang\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br")])]),n("h2",{attrs:{id:"chattr"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#chattr"}},[s._v("#")]),s._v(" chattr")]),s._v(" "),n("p",[s._v("Linux chattr命令用于改变文件属性。")]),s._v(" "),n("Badge",{attrs:{text:"实例",type:"tig"}}),s._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",[n("code",[s._v("// 用chattr命令防止系统中某个关键文件被修改：\nchattr +i /etc/resolv.conf\n")])])]),n("hr"),s._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",[n("code",[s._v("// 让某个文件只能往里面追加数据，但不能删除，适用于各种日志文件：\nchattr +a /var/log/messages\n")])])]),n("h2",{attrs:{id:"chmod"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#chmod"}},[s._v("#")]),s._v(" chmod")]),s._v(" "),n("p",[s._v("Linux/Unix 的文件调用权限分为三级 : 文件拥有者、群组、其他。利用 chmod 可以藉以控制文件如何被他人所调用。")]),s._v(" "),n("blockquote",[n("p",[s._v("u 表示该文件的拥有者，g 表示与该文件的拥有者属于同一个群体(group)者，o 表示其他以外的人，a 表示这三者皆是。"),n("br"),s._v("\n+ 表示增加权限、- 表示取消权限、= 表示唯一设定权限。"),n("br"),s._v("\nr 表示可读取，w 表示可写入，x 表示可执行，X 表示只有当该文件是个子目录或者该文件已经被设定过为可执行。")])]),s._v(" "),n("Badge",{attrs:{text:"实例",type:"tig"}}),s._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",[n("code",[s._v("// 将文件 file1.txt 设为所有人皆可读取 :\nchmod ugo+r file1.txt\nchmod a+r file1.txt\n")])])]),n("hr"),s._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",[n("code",[s._v("// 将文件 file1.txt 与 file2.txt 设为该文件拥有者，与其所属同一个群体者可写入，但其他以外的人则不可写入 :\nchmod ug+w,o-w file1.txt file2.txt\n")])])]),n("hr"),s._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",[n("code",[s._v("// 将 ex1.py 设定为只有该文件拥有者可以执行 :\nchmod u+x ex1.py\n")])])]),n("hr"),s._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",[n("code",[s._v("// 将目前目录下的所有文件与子目录皆设为任何人可读取 :\nchmod -R a+r *\n")])])]),n("hr"),s._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",[n("code",[s._v("// 此外chmod也可以用数字来表示权限如 :\nchmod 777 file\n\n语法为：\nchmod abc file\n\n其中a,b,c各为一个数字，分别表示User、Group、及Other的权限。\nr=4，w=2，x=1\n若要rwx属性则4+2+1=7；\n若要rw-属性则4+2=6；\n若要r-x属性则4+1=5。\n\n相当于：\nchmod a=rwx file\n")])])]),n("h2",{attrs:{id:"chown"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#chown"}},[s._v("#")]),s._v(" chown")]),s._v(" "),n("p",[s._v("Linux/Unix 是多人多工操作系统，所有的文件皆有拥有者。利用 chown 将指定文件的拥有者改为指定的用户或组，用户可以是用户名或者用户ID；组可以是组名或者组ID；文件是以空格分开的要改变权限的文件列表，支持通配符。")]),s._v(" "),n("p",[s._v("一般来说，这个指令只有是由系统管理者(root)所使用，一般使用者没有权限可以改变别人的文件拥有者，也没有权限可以自己的文件拥有者改设为别人。只有系统管理者(root)才有这样的权限。")]),s._v(" "),n("Badge",{attrs:{text:"实例",type:"tig"}}),s._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",[n("code",[s._v("// 将文件 file1.txt 的拥有者设为 users 群体的使用者 jessie :\nchown users:jessie file1.txt\n")])])]),n("hr"),s._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",[n("code",[s._v("// 将目前目录下的所有文件与子目录的拥有者皆设为 users 群体的使用者 lamport :\nchown -R lamport:users *\n")])])]),n("h2",{attrs:{id:"diff"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#diff"}},[s._v("#")]),s._v(" diff")]),s._v(" "),n("p",[s._v("Linux diff命令用于比较文件的差异。")]),s._v(" "),n("p",[s._v("diff以逐行的方式，比较文本文件的异同处。如果指定要比较目录，则diff会比较目录中相同文件名的文件，但不会比较其中子目录。")]),s._v(" "),n("Badge",{attrs:{text:"实例",type:"tig"}}),s._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",[n("code",[s._v("// 比较两个文件\n[root@localhost test3]# diff log2014.log log2013.log \n3c3\n< 2014-03\n---\n> 2013-03\n8c8\n< 2013-07\n---\n> 2013-08\n11,12d10\n< 2013-11\n< 2013-12\n")])])]),n("blockquote",[n("p",[s._v("说明：")]),s._v(" "),n("p",[s._v('上面的"3c3"和"8c8"表示log2014.log和log20143log文件在3行和第8行内容有所不同；"11,12d10"表示第一个文件比第二个文件多了第11和12行。')])]),s._v(" "),n("hr"),s._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",[n("code",[s._v("// 并排格式输出\n[root@localhost test3]# diff log2014.log log2013.log  -y -W 50\n2013-01                 2013-01\n2013-02                 2013-02\n2014-03               | 2013-03\n2013-04                 2013-04\n2013-05                 2013-05\n2013-06                 2013-06\n2013-07                 2013-07\n2013-07               | 2013-08\n2013-09                 2013-09\n2013-10                 2013-10\n2013-11               <\n2013-12               <\n")])])]),n("blockquote",[n("p",[s._v("说明：")]),s._v(" "),n("p",[s._v('"|"表示前后2个文件内容有不同'),n("br"),s._v('\n"<"表示后面文件比前面文件少了1行内容'),n("br"),s._v('\n">"表示后面文件比前面文件多了1行内容')])]),s._v(" "),n("h2",{attrs:{id:"file"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#file"}},[s._v("#")]),s._v(" file")]),s._v(" "),n("p",[s._v("Linux file命令用于辨识文件类型。通过file指令，我们得以辨识该文件的类型。")]),s._v(" "),n("Badge",{attrs:{text:"实例",type:"tig"}}),s._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",[n("code",[s._v("[root@localhost ~]# file install.log         <== 显示文件类型\ninstall.log: UTF-8 Unicode text\n--------------------------------------------------------------\n[root@localhost ~]# file -b install.log      <== 不显示文件名称\nUTF-8 Unicode text\n--------------------------------------------------------------\n[root@localhost ~]# file -i install.log      <== 显示MIME类别\ninstall.log: text/plain; charset=utf-8\n--------------------------------------------------------------\n[root@localhost ~]# file -b -i install.log\ntext/plain; charset=utf-8\n")])])]),n("hr"),s._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",[n("code",[s._v("显示符号链接的文件类型\n[root@localhost ~]# ls -l /var/mail\nlrwxrwxrwx 1 root root 10 08-13 00:11 /var/mail -> spool/mail\n--------------------------------------------------------------\n[root@localhost ~]# file /var/mail\n/var/mail: symbolic link to `spool/mail'\n--------------------------------------------------------------\n[root@localhost ~]# file -L /var/mail\n/var/mail: directory\n--------------------------------------------------------------\n[root@localhost ~]# file /var/spool/mail\n/var/spool/mail: directory\n--------------------------------------------------------------\n[root@localhost ~]# file -L /var/spool/mail\n/var/spool/mail: directory\n")])])]),n("h2",{attrs:{id:"find"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#find"}},[s._v("#")]),s._v(" find")]),s._v(" "),n("p",[s._v("Linux find命令用来在指定目录下查找文件。任何位于参数之前的字符串都将被视为欲查找的目录名。如果使用该命令时，不设置任何参数，则find命令将在当前目录下查找子目录与文件。并且将查找到的子目录和文件全部进行显示。")]),s._v(" "),n("Badge",{attrs:{text:"实例",type:"tig"}}),s._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",[n("code",[s._v('// 将目前目录及其子目录下所有延伸档名是 c 的文件列出来。\n# find . -name "*.c"\n\n// 将目前目录其其下子目录中所有一般文件列出\n# find . -type f\n\n// 将目前目录及其子目录下所有最近 20 天内更新过的文件列出\n# find . -ctime -20\n\n// 查找/var/log目录中更改时间在7日以前的普通文件，并在删除之前询问它们：\n# find /var/log -type f -mtime +7 -ok rm {} \\;\n\n// 查找前目录中文件属主具有读、写权限，并且文件所属组的用户和其他用户具有读权限的文件：\n# find . -type f -perm 644 -exec ls -l {} \\;\n\n// 为了查找系统中所有文件长度为0的普通文件，并列出它们的完整路径：\n# find / -type f -size 0 -exec ls -l {} \\;\n')])])]),n("h2",{attrs:{id:"more"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#more"}},[s._v("#")]),s._v(" more")]),s._v(" "),n("p",[s._v("Linux more 命令类似 cat ，不过会以一页一页的形式显示，更方便使用者逐页阅读，而最基本的指令就是按空白键（space）就往下一页显示，按 b 键就会往回（back）一页显示，而且还有搜寻字串的功能（与 vi 相似），使用中的说明文件，请按 h 。")]),s._v(" "),n("Badge",{attrs:{text:"实例",type:"tig"}}),s._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",[n("code",[s._v("// 逐页显示 testfile 文档内容，如有连续两行以上空白行则以一行空白行显示。\nmore -s testfile\n")])])]),n("hr"),s._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",[n("code",[s._v("// 从第 20 行开始显示 testfile 之文档内容。\nmore +20 testfile\n")])])]),n("blockquote",[n("p",[s._v("常用操作命令:"),n("br")]),s._v(" "),n("p",[s._v("Enter 向下n行，需要定义。默认为1行"),n("br"),s._v("\nCtrl+F 向下滚动一屏"),n("br"),s._v("\n空格键 向下滚动一屏"),n("br"),s._v("\nCtrl+B 返回上一屏"),n("br"),s._v("\n= 输出当前行的行号"),n("br"),s._v("\n：f 输出文件名和当前行的行号"),n("br"),s._v("\nV 调用vi编辑器"),n("br"),s._v("\n!命令 调用Shell，并执行命令"),n("br"),s._v("\nq 退出more")])]),s._v(" "),n("h2",{attrs:{id:"less"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#less"}},[s._v("#")]),s._v(" less")]),s._v(" "),n("p",[s._v("less 与 more 类似，但使用 less 可以随意浏览文件，而 more 仅能向前移动，却不能向后移动，而且 less 在查看之前不会加载整个文件。")]),s._v(" "),n("Badge",{attrs:{text:"参数说明",type:"error"}}),s._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",[n("code",[s._v('-i 忽略搜索时的大小写\n-m 显示类似more命令的百分比\n-N 显示每行的行号\n-o <文件名> 将less 输出的内容在指定文件中保存起来\n-Q 不使用警告音\n-s 显示连续空行为一行\n-S 行过长时间将超出部分舍弃\n-x <数字> 将"tab"键显示为规定的数字空格\n/字符串：向下搜索"字符串"的功能\n?字符串：向上搜索"字符串"的功能\nn：重复前一个搜索（与 / 或 ? 有关）\nN：反向重复前一个搜索（与 / 或 ? 有关）\nb 向后翻一页\nd 向后翻半页\nh 显示帮助界面\nQ 退出less 命令\nu 向前滚动半页\ny 向前滚动一行\n空格键 滚动一页\n回车键 滚动一行\n[pagedown]： 向下翻动一页\n[pageup]： 向上翻动一页\n')])])]),n("Badge",{attrs:{text:"实例",type:"tig"}}),s._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",[n("code",[s._v("// 查看文件\nless log2013.log\n")])])]),n("hr"),s._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",[n("code",[s._v("// ps查看进程信息并通过less分页显示\nps -ef |less\n")])])]),n("hr"),s._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",[n("code",[s._v("// 查看命令历史使用记录并通过less分页显示\n[root@localhost test]# history | less\n22  scp -r tomcat6.0.32 root@192.168.120.203:/opt/soft\n23  cd ..\n24  scp -r web root@192.168.120.203:/opt/\n25  cd soft\n26  ls\n……省略……\n")])])]),n("hr"),s._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",[n("code",[s._v("// 浏览多个文件\nless log2013.log log2014.log\n\n说明：\n输入 ：n后，切换到 log2014.log\n输入 ：p 后，切换到log2013.log\n")])])]),n("hr"),s._v(" "),n("blockquote",[n("p",[s._v("附加备注"),n("br"),s._v(" "),n("br"),s._v("\n全屏导航"),n("br"),s._v("\nctrl + F - 向前移动一屏"),n("br"),s._v("\nctrl + B - 向后移动一屏"),n("br"),s._v("\nctrl + D - 向前移动半屏"),n("br"),s._v("\nctrl + U - 向后移动半屏"),n("br"),s._v("\n单行导航"),n("br"),s._v("\nj - 向前移动一行"),n("br"),s._v("\nk - 向后移动一行")])]),s._v(" "),n("h2",{attrs:{id:"cp"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#cp"}},[s._v("#")]),s._v(" cp")]),s._v(" "),n("p",[s._v("Linux cp命令主要用于复制文件或目录。")]),s._v(" "),n("Badge",{attrs:{text:"参数说明",type:"error"}}),s._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",[n("code",[s._v('-a：此选项通常在复制目录时使用，它保留链接、文件属性，并复制目录下的所有内容。其作用等于dpR参数组合。\n-d：复制时保留链接。这里所说的链接相当于Windows系统中的快捷方式。\n-f：覆盖已经存在的目标文件而不给出提示。\n-i：与-f选项相反，在覆盖目标文件之前给出提示，要求用户确认是否覆盖，回答"y"时目标文件将被覆盖。\n-p：除复制文件的内容外，还把修改时间和访问权限也复制到新文件中。\n-r：若给出的源文件是一个目录文件，此时将复制该目录下所有的子目录和文件。\n-l：不复制文件，只是生成链接文件。\n')])])]),n("Badge",{attrs:{text:"实例",type:"tig"}}),s._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",[n("code",[s._v('// 使用指令"cp"将当前目录"test/"下的所有文件复制到新目录"newtest"下，输入如下命令：\n$ cp –r test/ newtest   \n')])])]),n("h2",{attrs:{id:"rm"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#rm"}},[s._v("#")]),s._v(" rm")]),s._v(" "),n("p",[s._v("Linux rm命令用于删除一个文件或者目录。")]),s._v(" "),n("Badge",{attrs:{text:"参数说明",type:"error"}}),s._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",[n("code",[s._v("-i 删除前逐一询问确认。\n-f 即使原档案属性设为唯读，亦直接删除，无需逐一确认。\n-r 将目录及以下之档案亦逐一删除。\n")])])]),n("Badge",{attrs:{text:"实例",type:"tig"}}),s._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",[n("code",[s._v('删除文件可以直接使用rm命令，若删除目录则必须配合选项"-r"，例如：\n\n// rm  test.txt \nrm：是否删除 一般文件 "test.txt"? y  \n\n// rm  homework  \nrm: 无法删除目录"homework": 是一个目录  \n\n// rm  -r  homework  \nrm：是否删除 目录 "homework"? y \n\n// 删除当前目录下的所有文件及目录，命令行为：\nrm  -r  * \n')])])]),n("blockquote",[n("p",[s._v("切记 别写成"),n("code",[s._v("rm -rf /")]),s._v("这样会造成删除整个操作系统！！"),n("br"),s._v("\n切记 别写成"),n("code",[s._v("rm -rf /")]),s._v("这样会造成删除整个操作系统！！"),n("br"),s._v("\n切记 别写成"),n("code",[s._v("rm -rf /")]),s._v("这样会造成删除整个操作系统！！")])]),s._v(" "),n("h2",{attrs:{id:"mv"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#mv"}},[s._v("#")]),s._v(" mv")]),s._v(" "),n("p",[s._v("Linux mv命令用来为文件或目录改名、或将文件或目录移入其它位置")]),s._v(" "),n("table",[n("thead",[n("tr",[n("th",[s._v("命令格式")]),s._v(" "),n("th",[s._v("运行结果")])])]),s._v(" "),n("tbody",[n("tr",[n("td",[s._v("mv 文件名 文件名")]),s._v(" "),n("td",[s._v("将源文件名改为目标文件名")])]),s._v(" "),n("tr",[n("td",[s._v("mv 文件名 目录名")]),s._v(" "),n("td",[s._v("将文件移动到目标目录")])]),s._v(" "),n("tr",[n("td",[s._v("mv 目录名 目录名")]),s._v(" "),n("td",[s._v("目标目录已存在，将源目录移动到目标目录；目标目录不存在则改名")])]),s._v(" "),n("tr",[n("td",[s._v("mv 目录名 文件名")]),s._v(" "),n("td",[s._v("出错")])])])]),s._v(" "),n("Badge",{attrs:{text:"实例",type:"tig"}}),s._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",[n("code",[s._v("// 将文件 aaa 更名为 bbb :\nmv aaa bbb\n\n// 将info目录放入logs目录中。注意，如果logs目录不存在，则该命令将info改名为logs。\nmv info/ logs \n\n// 再如将/usr/student下的所有文件和目录移到当前目录下，命令行为：\n$ mv /usr/student/*  . \n")])])]),n("h2",{attrs:{id:"which"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#which"}},[s._v("#")]),s._v(" which")]),s._v(" "),n("p",[s._v("which命令用于查找文件。which指令会在环境变量$PATH设置的目录里查找符合条件的文件。")]),s._v(" "),n("Badge",{attrs:{text:"实例",type:"tig"}}),s._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",[n("code",[s._v('// 使用指令"which"查看指令"ls，bash"的绝对路径，输入如下命令：\n[root@localhost]# which ls\nalias ls=\'ls --color=auto\'\n        /usr/bin/ls\n-------------------------------------\n[root@localhost]# which bash\n/usr/bin/bash\n')])])]),n("h2",{attrs:{id:"paste"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#paste"}},[s._v("#")]),s._v(" paste")]),s._v(" "),n("p",[s._v("paste指令会把每个文件以列对列的方式，一列列地加以合并。")]),s._v(" "),n("Badge",{attrs:{text:"实例",type:"tig"}}),s._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",[n("code",[s._v("[root@localhost ~]# cat 1\n1\n-------------------------------------\n[root@localhost ~]# cat 2\n2\n-------------------------------------\n[root@localhost ~]# cat 3\n333\n-------------------------------------\n[root@localhost ~]# paste 1 2 3\n1       2       333\n-------------------------------------\n[root@localhost ~]# paste -s 1 2 3   \n1\n2\n333\n")])])]),n("h2",{attrs:{id:"scp"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#scp"}},[s._v("#")]),s._v(" scp")]),s._v(" "),n("p",[s._v("scp是 secure copy的缩写, scp是linux系统下基于ssh登陆进行安全的远程文件拷贝命令。")]),s._v(" "),n("Badge",{attrs:{text:"实例",type:"tig"}}),s._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",[n("code",[s._v("// 从本地复制到远程(198.168.156.215)\nscp /home/space/music/1.mp3 root@198.168.156.215:/home/root/others/music \nscp /home/space/music/1.mp3 root@198.168.156.215:/home/root/others/music/001.mp3 \nscp /home/space/music/1.mp3 198.168.156.215:/home/root/others/music \nscp /home/space/music/1.mp3 198.168.156.215:/home/root/others/music/001.mp3 \n\n第1,2个指定了用户名，命令执行后需要再输入密码，第1个仅指定了远程的目录，文件名字不变，第2个指定了文件名；\n第3,4个没有指定用户名，命令执行后需要输入用户名和密码，第3个仅指定了远程的目录，文件名字不变，第4个指定了文件名；\n")])])]),n("hr"),s._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",[n("code",[s._v("// 从远程复制到本地，只要将从本地复制到远程的命令的后2个参数调换顺序即可，如下实例\nscp root@198.168.156.215:/home/root/others/music /home/space/music/1.mp3 \nscp -r 198.168.156.215:/home/root/others/ /home/space/music/\n-r： 递归复制整个目录。\n")])])]),n("hr"),s._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",[n("code",[s._v("// 如果远程服务器防火墙有为scp命令设置了指定的端口，我们需要使用 -P 参数来设置命令的端口号，命令格式如下：\n#scp 命令使用端口号 4588\nscp -P 4588 remote@198.168.156.215:/usr/local/sin.sh /home/administrator\n使用scp命令要确保使用的用户具有可读取远程服务器相应文件的权限，否则scp命令是无法起作用的\n")])])]),n("h2",{attrs:{id:"read"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#read"}},[s._v("#")]),s._v(" read")]),s._v(" "),n("p",[s._v("read 内部命令被用来从标准输入读取单行数据。这个命令可以用来读取键盘输入，当使用重定向的时候，可以读取文件中的一行数据。")]),s._v(" "),n("Badge",{attrs:{text:"实例",type:"tig"}}),s._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",[n("code",[s._v('// 简单读取\n------------------------------------------\n#!/bin/bash\n#这里默认会换行  \necho "输入网站名: "  \n#读取从键盘的输入  \nread website  \necho "你输入的网站名是 $website"  \nexit 0  #退出\n------------------------------------------\n测试结果为：\n输入网站名: \nwww.zhangqifei.top\n你输入的网站名是 www.zhangqifei.top\n')])])]),n("hr"),s._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",[n("code",[s._v('-p 参数，允许在 read 命令行中直接指定一个提示。\n------------------------------------------\n#!/bin/bash\nread -p "输入网站名:" website\necho "你输入的网站名是 $website" \nexit 0\n------------------------------------------\n测试结果为：    \n输入网站名:www.zhangqifei.top\n你输入的网站名是 www.zhangqifei.top\n')])])]),n("hr"),s._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",[n("code",[s._v('-t 参数指定 read 命令等待输入的秒数，当计时满时，read命令返回一个非零退出状态。\n------------------------------------------\n#!/bin/bash\nif read -t 5 -p "输入网站名:" name\nthen\n    echo "你输入的网站名是 $website"\nelse\n    echo -e "\\n抱歉，你输入超时了。"\nfi\nexit 0\n------------------------------------------\n执行程序不输入，等待 5 秒后：\n输入网站名:\n抱歉，你输入超时了\n')])])]),n("hr"),s._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",[n("code",[s._v('除了输入时间计时，还可以使用 -n 参数设置 read 命令计数输入的字符。当输入的字符数目达到预定数目时，自动退出，并将输入的数据赋值给变量。\n------------------------------------------\n#!/bin/bash\nread -n1 -p "Do you want to continue [Y/N]?" answer\ncase $answer in\nY | y)\n    echo -e "\\nfine ,continue";;\nN | n)\n    echo -e "\\nok,good bye";;\n*)\n    echo -e "\\nerror choice";;\n\nesac\nexit 0\n\n该例子使用了-n 选项，后接数值 1，指示 read 命令只要接受到一个字符就退出。只要按下一个字符进行回答，read 命令立即接受输入并将其传给变量，无需按回车键。\n------------------------------------------\n只接收 2 个输入就退出：\n#!/bin/bash\nread -n2 -p "请随便输入两个字符: " any\necho -e "\\n您输入的两个字符是:$any"\nexit 0\n')])])]),n("hr"),s._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",[n("code",[s._v('-s 选项能够使 read 命令中输入的数据不显示在命令终端上（实际上，数据是显示的，只是 read 命令将文本颜色设置成与背景相同的颜色）。输入密码常用这个选项。\n------------------------------------------\n#!/bin/bash\nread  -s  -p "请输入您的密码:" pass\necho -e "\\n您输入的密码是 $pass"\nexit 0\n------------------------------------------\n执行程序输入密码后是不显示的：\n请输入您的密码:\n您输入的密码是 www.zhangqifei.top\n')])])]),n("hr"),s._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",[n("code",[s._v('每次调用 read 命令都会读取文件中的 "一行" 文本。当文件没有可读的行时，read 命令将以非零状态退出。\n\n通过什么样的方法将文件中的数据传给 read 呢？使用 cat 命令并通过管道将结果直接传送给包含 read 命令的 while 命令。\n------------------------------------------\n测试文件 test.txt 内容如下：\n123\n456\nwww.zhangqifei.top\n------------------------------------------\n测试代码：\n#!/bin/bash\ncount=1    # 赋值语句，不加空格\ncat test.txt | while read line      # cat 命令的输出作为read命令的输入,read读到>的值放在line中\ndo\necho "Line $count:$line"\ncount=$[ $count + 1 ]          # 注意中括号中的空格。\ndone\necho "finish"\nexit 0\n------------------------------------------\n执行结果为：\nLine 1:123\nLine 2:456\nLine 3:www.zhangqifei.top\nfinish\n')])])]),n("h2",{attrs:{id:"awk"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#awk"}},[s._v("#")]),s._v(" awk")]),s._v(" "),n("p",[s._v("awk是行处理器: 相比较屏幕处理的优点，在处理庞大文件时不会出现内存溢出或是处理缓慢的问题，通常用来格式化文本信息。awk处理过程: 依次对每一行进行处理，然后输出")]),s._v(" "),n("p",[n("strong",[s._v("下面先了解下内建变量和运算符")])]),s._v(" "),n("h3",{attrs:{id:"内建变量"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#内建变量"}},[s._v("#")]),s._v(" 内建变量")]),s._v(" "),n("table",[n("thead",[n("tr",[n("th",[s._v("变量")]),s._v(" "),n("th",[s._v("描述")])])]),s._v(" "),n("tbody",[n("tr",[n("td",[s._v("$n")]),s._v(" "),n("td",[s._v("当前记录的第n个字段，字段间由FS分隔")])]),s._v(" "),n("tr",[n("td",[s._v("$0")]),s._v(" "),n("td",[s._v("完整的输入记录")])]),s._v(" "),n("tr",[n("td",[s._v("ARGC")]),s._v(" "),n("td",[s._v("命令行参数的数目")])]),s._v(" "),n("tr",[n("td",[s._v("ARGIND")]),s._v(" "),n("td",[s._v("命令行中当前文件的位置(从0开始算)")])]),s._v(" "),n("tr",[n("td",[s._v("ARGV")]),s._v(" "),n("td",[s._v("包含命令行参数的数组")])]),s._v(" "),n("tr",[n("td",[s._v("CONVFMT")]),s._v(" "),n("td",[s._v("数字转换格式(默认值为%.6g)ENVIRON环境变量关联数组")])]),s._v(" "),n("tr",[n("td",[s._v("ERRNO")]),s._v(" "),n("td",[s._v("最后一个系统错误的描述")])]),s._v(" "),n("tr",[n("td",[s._v("FIELDWIDTHS")]),s._v(" "),n("td",[s._v("字段宽度列表(用空格键分隔)")])]),s._v(" "),n("tr",[n("td",[s._v("FILENAME")]),s._v(" "),n("td",[s._v("当前文件名")])]),s._v(" "),n("tr",[n("td",[s._v("FNR")]),s._v(" "),n("td",[s._v("各文件分别计数的行号")])]),s._v(" "),n("tr",[n("td",[s._v("FS")]),s._v(" "),n("td",[s._v("字段分隔符(默认是任何空格)")])]),s._v(" "),n("tr",[n("td",[s._v("IGNORECASE")]),s._v(" "),n("td",[s._v("如果为真，则进行忽略大小写的匹配")])]),s._v(" "),n("tr",[n("td",[s._v("NF")]),s._v(" "),n("td",[s._v("一条记录的字段的数目")])]),s._v(" "),n("tr",[n("td",[s._v("NR")]),s._v(" "),n("td",[s._v("已经读出的记录数，就是行号，从1开始")])]),s._v(" "),n("tr",[n("td",[s._v("OFMT")]),s._v(" "),n("td",[s._v("数字的输出格式(默认值是%.6g)")])]),s._v(" "),n("tr",[n("td",[s._v("OFS")]),s._v(" "),n("td",[s._v("输出记录分隔符（输出换行符），输出时用指定的符号代替换行符")])]),s._v(" "),n("tr",[n("td",[s._v("ORS")]),s._v(" "),n("td",[s._v("输出记录分隔符(默认值是一个换行符)")])]),s._v(" "),n("tr",[n("td",[s._v("RLENGTH")]),s._v(" "),n("td",[s._v("由match函数所匹配的字符串的长度")])]),s._v(" "),n("tr",[n("td",[s._v("RS")]),s._v(" "),n("td",[s._v("记录分隔符(默认是一个换行符)")])]),s._v(" "),n("tr",[n("td",[s._v("RSTART")]),s._v(" "),n("td",[s._v("由match函数所匹配的字符串的第一个位置")])]),s._v(" "),n("tr",[n("td",[s._v("SUBSEP")]),s._v(" "),n("td",[s._v("数组下标分隔符(默认值是/034)")])])])]),s._v(" "),n("h3",{attrs:{id:"运算符"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#运算符"}},[s._v("#")]),s._v(" 运算符")]),s._v(" "),n("table",[n("thead",[n("tr",[n("th",[s._v("运算符")]),s._v(" "),n("th",[s._v("描述")])])]),s._v(" "),n("tbody",[n("tr",[n("td",[s._v("= += -= *= /= %= ^= **=")]),s._v(" "),n("td",[s._v("赋值")])]),s._v(" "),n("tr",[n("td",[s._v("?:")]),s._v(" "),n("td",[s._v("C条件表达式")])]),s._v(" "),n("tr",[n("td"),s._v(" "),n("td")]),s._v(" "),n("tr",[n("td",[s._v("&&")]),s._v(" "),n("td",[s._v("逻辑与")])]),s._v(" "),n("tr",[n("td",[s._v("~ ~!")]),s._v(" "),n("td",[s._v("匹配正则表达式和不匹配正则表达式")])]),s._v(" "),n("tr",[n("td",[s._v("< <= > >= != ==")]),s._v(" "),n("td",[s._v("关系运算符")])]),s._v(" "),n("tr",[n("td",[s._v("空格")]),s._v(" "),n("td",[s._v("连接")])]),s._v(" "),n("tr",[n("td",[s._v("+ -")]),s._v(" "),n("td",[s._v("加，减")])]),s._v(" "),n("tr",[n("td",[s._v("* / %")]),s._v(" "),n("td",[s._v("乘，除与求余")])]),s._v(" "),n("tr",[n("td",[s._v("+ - !")]),s._v(" "),n("td",[s._v("一元加，减和逻辑非")])]),s._v(" "),n("tr",[n("td",[s._v("^ ***")]),s._v(" "),n("td",[s._v("求幂")])]),s._v(" "),n("tr",[n("td",[s._v("++ --")]),s._v(" "),n("td",[s._v("增加或减少，作为前缀或后缀")])]),s._v(" "),n("tr",[n("td",[s._v("$")]),s._v(" "),n("td",[s._v("字段引用")])]),s._v(" "),n("tr",[n("td",[s._v("in")]),s._v(" "),n("td",[s._v("数组成员")])])])]),s._v(" "),n("Badge",{attrs:{text:"实例",type:"tig"}}),s._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",[n("code",[s._v("[root@localhost ~]# cat log.txt \n2 this is a test\n3 Are you like awk\nThis's a test\n10 There are orange,apple,mongo\n\n// 每行按空格或TAB分割，输出文本中的1、4项\n[root@localhost ~]# awk '{print $1,$4}' log.txt   \n2 a\n3 like\nThis's \n10 orange,apple,mongo\n\n// 格式化输出\n[root@localhost ~]# awk '{printf \"%-8s %-10s\\n\",$1,$4}' log.txt\n2        a         \n3        like      \nThis's             \n10       orange,apple,mongo\n")])])]),n("blockquote",[n("p",[s._v("说明 :"),n("br")]),s._v(" "),n("p",[n("code",[s._v("%")]),s._v(" 格式化输出分隔符"),n("br"),s._v(" "),n("code",[s._v("-8")]),s._v(" 长度为8个字符"),n("br"),s._v(" "),n("code",[s._v("s")]),s._v(" 表示字符串类型"),n("br"),s._v("\n打印每行两个个字段，指定第一个字段输出字符串类型(长度为8)，第二个字段输出字符串类型(长度为10)")])]),s._v(" "),n("hr"),s._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",[n("code",[s._v("awk -F  #-F相当于内置变量FS, 指定分割字符\n[root@localhost ~]# awk -F' ' '{print $3,$4}' log.txt   \nis a\nyou like\ntest \nare orange,apple,mongo\n---------------------------------------------\n// 或者使用内建变量\n[root@localhost ~]# awk 'BEGIN{FS=\" \"} {print $3,$4}' log.txt \nis a\nyou like\ntest \nare orange,apple,mongo\n---------------------------------------------\n// 使用多个分隔符.先使用空格分割，然后对分割结果再使用\",\"分割\n[root@localhost ~]# awk -F '[ ,]'  '{print $1,$2,$5}'   log.txt\n2 this test\n3 Are awk\nThis's a \n10 There apple\n")])])]),n("hr"),s._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",[n("code",[s._v("awk -v  # 设置变量\n---------------------------------------------\n[root@localhost ~]# awk -va=1 '{print $1,$1+a}' log.txt\n2 3\n3 4\nThis's 1\n10 11\n---------------------------------------------\n[root@localhost ~]# awk -va=1 -vb=s '{print $1,$1+a,$1b}' log.txt\n2 3 2s\n3 4 3s\nThis's 1 This'ss\n10 11 10s\n")])])]),n("hr"),s._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",[n("code",[s._v("awk -f {awk脚本} {文件名}\n---------------------------------------------\n// 过滤第一列大于2的行\n[root@localhost ~]# awk '$1>2' log.txt    #命令\n#输出\n3 Are you like awk\nThis's a test\n10 There are orange,apple,mongo\n---------------------------------------------\n// 过滤第一列等于2的行\n[root@localhost ~]# awk '$1==2 {print $1,$3}' log.txt    #命令\n#输出\n2 is\n---------------------------------------------\n// 过滤第一列大于2并且第二列等于'Are'的行\n[root@localhost ~]# awk '$1>2 && $2==\"Are\" {print $1,$2,$3}' log.txt    #命令\n#输出\n3 Are you\n")])])]),n("hr"),s._v(" "),n("center",[n("strong",[s._v("下方内容 请对照↑↑↑↑↑上面：内建变量表↑↑↑↑↑")])]),s._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",[n("code",[s._v('########################################专用分界线########################################\n[root@localhost ~]# awk \'BEGIN{printf "%4s %4s %4s %4s %4s %4s %4s %4s %4s\\n","FILENAME","ARGC","FNR","FS","NF","NR","OFS","ORS","RS";printf "---------------------------------------------\\n"} {printf "%4s %4s %4s %4s %4s %4s %4s %4s %4s\\n",FILENAME,ARGC,FNR,FS,NF,NR,OFS,ORS,RS}\'  log.txt\nFILENAME ARGC  FNR   FS   NF   NR  OFS  ORS   RS\n---------------------------------------------\nlog.txt    2    1         5    1         \n    \n\nlog.txt    2    2         5    2         \n    \n\nlog.txt    2    3         3    3         \n    \n\nlog.txt    2    4         4    4         \n########################################专用分界线########################################\n[root@localhost ~]# awk -F\\\' \'BEGIN{printf "%4s %4s %4s %4s %4s %4s %4s %4s %4s\\n","FILENAME","ARGC","FNR","FS","NF","NR","OFS","ORS","RS";printf "---------------------------------------------\\n"} {printf "%4s %4s %4s %4s %4s %4s %4s %4s %4s\\n",FILENAME,ARGC,FNR,FS,NF,NR,OFS,ORS,RS}\'  log.txt\nFILENAME ARGC  FNR   FS   NF   NR  OFS  ORS   RS\n---------------------------------------------\nlog.txt    2    1    \'    1    1         \n    \n\nlog.txt    2    2    \'    1    2         \n    \n\nlog.txt    2    3    \'    2    3         \n    \n\nlog.txt    2    4    \'    1    4\n########################################专用分界线########################################\n// 输出顺序号 NR, 匹配文本行号\n[root@localhost ~]# awk \'{print NR,FNR,$1,$2,$3}\' log.txt\n1 1 2 this is\n2 2 3 Are you\n3 3 This\'s a test\n4 4 10 There are\n########################################专用分界线########################################\n// 指定输出分割符 OFS\n[root@localhost ~]# awk \'{print $1,$2,$5}\' OFS=" $ "  log.txt\n2 $ this $ test\n3 $ Are $ awk\nThis\'s $ a $ \n10 $ There $\n')])])]),n("center",[n("strong",[s._v("使用正则，字符串匹配")])]),s._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",[n("code",[s._v("// 输出第二列包含 \"th\"，并打印第二列与第四列\n[root@localhost ~]# awk '$2 ~ /th/ {print $2,$4}' log.txt\n---------------------------------------------\nthis a\n")])])]),n("blockquote",[n("p",[s._v("~ 表示模式开始。// 中是模式。")])]),s._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",[n("code",[s._v("// 输出包含\"re\" 的行\n[root@localhost ~]# awk '/re/ ' log.txt\n---------------------------------------------\n3 Are you like awk\n10 There are orange,apple,mongo\n")])])]),n("center",[n("strong",[s._v("忽略大小写")])]),s._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",[n("code",[s._v("[root@localhost ~]# awk 'BEGIN{IGNORECASE=1} /this/' log.txt\n---------------------------------------------\n2 this is a test\nThis's a test\n")])])]),n("center",[n("strong",[s._v("模式取反")])]),s._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",[n("code",[s._v("[root@localhost ~]# awk '$2 !~ /th/ {print $2,$4}' log.txt\n---------------------------------------------\nAre like\na\nThere orange,apple,mongo\n[root@localhost ~]# awk '!/th/ {print $2,$4}' log.txt\n---------------------------------------------\nAre like\na\nThere orange,apple,mongo\n")])])]),n("center",[n("strong",[s._v("另外一些实例")])]),s._v("\n    // 计算文件大小\n    [root@localhost ~]# ls -l *.txt | awk '{sum+=$6} END {print sum}'\n    666581\n    --------------------------------------------------\n    // 从文件中找出长度大于80的行\n    awk 'length>80' log.txt\n    --------------------------------------------------\n    // 打印九九乘法表\n    seq 9 | sed 'H;g' | awk -v RS='' '{for(i=1;i<=NF;i++)printf(\"%dx%d=%d%s\", i, NR, i*NR, i==NR?\"\\n\":\"\\t\")}'  \n"),n("h2",{attrs:{id:"awk脚本"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#awk脚本"}},[s._v("#")]),s._v(" awk脚本")]),s._v(" "),n("p",[s._v("关于awk脚本，我们需要注意两个关键词BEGIN和END。")]),s._v(" "),n("blockquote",[n("p",[s._v("BEGIN{ 这里面放的是执行前的语句 }"),n("br"),s._v("\nEND {这里面放的是处理完所有的行后要执行的语句 }"),n("br"),s._v("\n{这里面放的是处理每一行时要执行的语句}")])]),s._v(" "),n("Badge",{attrs:{text:"实例",type:"tig"}}),s._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",[n("code",[s._v("假设有这么一个文件（学生成绩表）：\n[root@localhost ~]# cat score.txt \nMarry   2143 78 84 77\nJack    2321 66 78 45\nTom     2122 48 77 71\nMike    2537 87 97 95\nBob     2415 40 57 62\n")])])]),n("p",[s._v("我们的awk脚本如下：")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('[root@localhost ~]# cat cal.awk\n#!/bin/awk -f\n#运行前\nBEGIN {\n    math = 0\n    english = 0\n    computer = 0\n \n    printf "NAME    NO.   MATH  ENGLISH  COMPUTER   TOTAL\\n"\n    printf "---------------------------------------------\\n"\n}\n#运行中\n{\n    math+=$3\n    english+=$4\n    computer+=$5\n    printf "%-6s %-6s %4d %8d %8d %8d\\n", $1, $2, $3,$4,$5, $3+$4+$5\n}\n#运行后\nEND {\n    printf "---------------------------------------------\\n"\n    printf "  TOTAL:%10d %8d %8d \\n", math, english, computer\n    printf "AVERAGE:%10.2f %8.2f %8.2f\\n", math/NR, english/NR, computer/NR\n}\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br")])]),n("p",[s._v("执行结果：")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("[root@localhost ~]# awk -f cal.awk score.txt\nNAME    NO.   MATH  ENGLISH  COMPUTER   TOTAL\n---------------------------------------------\nMarry  2143     78       84       77      239\nJack   2321     66       78       45      189\nTom    2122     48       77       71      196\nMike   2537     87       97       95      279\nBob    2415     40       57       62      159\n---------------------------------------------\n  TOTAL:       319      393      350 \nAVERAGE:     63.80    78.60    70.00\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br")])]),n("h2",{attrs:{id:"grep"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#grep"}},[s._v("#")]),s._v(" grep")]),s._v(" "),n("p",[s._v('grep指令用于查找内容包含指定的范本样式的文件，如果发现某文件的内容符合所指定的范本样式，预设grep指令会把含有范本样式的那一列显示出来。若不指定任何文件名称，或是所给予的文件名为"-"，则grep指令会从标准输入设备读取数据。')]),s._v(" "),n("Badge",{attrs:{text:"实例",type:"tig"}}),s._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",[n("code",[s._v("[root@localhost ~]# grep test test*  #查找前缀有“test”的文件包含“test”字符串的文件  \ntestfile1:This a Linux testfile!     #列出testfile1 文件中包含test字符的行  \ntestfile_2:This is a linux testfile! #列出testfile_2 文件中包含test字符的行  \ntestfile_2:Linux test                #列出testfile_2 文件中包含test字符的行 \n")])])]),n("hr"),s._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",[n("code",[s._v('// 以递归的方式查找符合条件的文件。\n//例如，查找指定目录/etc/yum.repos.d/ 及其子目录（如果存在子目录的话）下所有文件中包含字符串"update"的文件，并打印出该字符串所在行的内容\n[root@localhost ~]#  grep -r update /etc/yum.repos.d/\n/etc/yum.repos.d/CentOS-Base.repo:[updates]\n/etc/yum.repos.d/CentOS-Base.repo:baseurl=http://mirrors.cloud.aliyuncs.com/centos/$releasever/updates/$basearch/\n')])])]),n("hr"),s._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",[n("code",[s._v('//反向查找。前面各个例子是查找并打印出符合条件的行，通过"-v"参数可以打印出不符合条件行的内容。\n//查找文件名中包含 test 的文件中不包含test 的行，此时，使用的命令为：\n[root@localhost ~]# grep -v update /etc/yum.repos.d/epel.repo \n[epel]\nname=Extra Packages for Enterprise Linux 7 - $basearch\nenabled=1\nfailovermethod=priority\nbaseurl=http://mirrors.cloud.aliyuncs.com/epel/7/$basearch\ngpgcheck=0\ngpgkey=http://mirrors.cloud.aliyuncs.com/epel/RPM-GPG-KEY-EPEL-7\n')])])]),n("h2",{attrs:{id:"sed"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#sed"}},[s._v("#")]),s._v(" sed")]),s._v(" "),n("p",[s._v("Sed主要用来自动编辑一个或多个文件；简化对文件的反复操作；编写转换程序等。")]),s._v(" "),n("Badge",{attrs:{text:"实例",type:"tig"}}),s._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",[n("code",[s._v("[root@localhost ~]# cat log.txt \n2 this is a test\n3 Are you like awk\nThis's a test\n10 There are orange,apple,mongo\n---------------------------------------------------------------\n// 在log.txt文件的第五行后添加一行，并将结果输出到标准输出\n[root@localhost ~]# sed -e 4a\\newLine log.txt \n2 this is a test\n3 Are you like awk\nThis's a test\n10 There are orange,apple,mongo\nnewLine\n")])])]),n("center",[n("strong",[s._v("以行为单位的新增/删除")])]),s._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",[n("code",[s._v("// 将 /etc/passwd 的内容列出并且列印行号，同时，请将第 2~5 行删除！\n[root@localhost ~]# nl /etc/passwd | sed '2,5d'\n 1  root:x:0:0:root:/root:/bin/bash\n 6  sync:x:5:0:sync:/sbin:/bin/sync\n 7  shutdown:x:6:0:shutdown:/sbin:/sbin/shutdown\n 8  halt:x:7:0:halt:/sbin:/sbin/halt\n 9  mail:x:8:12:mail:/var/spool/mail:/sbin/nologin\n10  operator:x:11:0:operator:/root:/sbin/nologin\n.....(后面省略).....\n")])])]),n("blockquote",[n("p",[s._v("sed 的动作为 '2,5d' ，那个 d 就是删除！因为 2-5 行给他删除了，所以显示的数据就没有 2-5 行罗～ 另外，注意一下，原本应该是要下达 sed -e 才对，没有 -e 也行啦！同时也要注意的是， sed 后面接的动作，请务必以 '' 两个单引号括住喔！")])]),s._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",[n("code",[s._v("// 只要删除第 2 行\nnl /etc/passwd | sed '2d' \n-------------------------------\n// 要删除第 3 到最后一行\nnl /etc/passwd | sed '3,$d' \n-----------------------------------------------------\n// 在第二行后(亦即是加在第三行)加上『drink tea?』字样！\n[root@localhost ~]# nl /etc/passwd | sed '2a drink tea'\n1 root:x:0:0:root:/root:/bin/bash\n2 bin:x:1:1:bin:/bin:/sbin/nologin\ndrink tea\n3 daemon:x:2:2:daemon:/sbin:/sbin/nologin\n.....(后面省略).....\n-------------------------------------------------------------------------   \n// 那如果是要在第二行前\nnl /etc/passwd | sed '2i drink tea' \n-------------------------------------------------------------------------\n//如果是要增加两行以上，在第二行后面加入两行字，例如『Drink tea or .....』与『drink beer?』\n[root@localhost ~]# nl /etc/passwd | sed '2a Drink tea or ......\\\n> drink beer ?'\n    1  root:x:0:0:root:/root:/bin/bash\n    2  bin:x:1:1:bin:/bin:/sbin/nologin\nDrink tea or ......\n> drink beer ?\n    3  daemon:x:2:2:daemon:/sbin:/sbin/nologin\n    .....(后面省略).....\n")])])]),n("blockquote",[n("p",[s._v("每一行之间都必须要以反斜杠『 \\ 』来进行新行的添加喔！所以，上面的例子中，我们可以发现在第一行的最后面就有 \\ 存在。")])]),s._v(" "),n("center",[n("strong",[s._v("以行为单位的替换与显示")])]),s._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",[n("code",[s._v("// 将第2-5行的内容取代成为『No 2-5 number』呢？\n[root@localhost ~]# nl /etc/passwd | sed '2,5c No 2-5 number'\n1 root:x:0:0:root:/root:/bin/bash\nNo 2-5 number\n6 sync:x:5:0:sync:/sbin:/bin/sync\n.....(后面省略).....\n")])])]),n("blockquote",[n("p",[s._v("透过这个方法我们就能够将数据整行取代了！\n---------------------------------------------------\n// 仅列出 /etc/passwd 文件内的第 5-7 行\n[root@localhost ~]# nl /etc/passwd | sed -n '5,7p'\n5 lp❌4:7:lp:/var/spool/lpd:/sbin/nologin\n6 sync❌5:0:sync:/sbin:/bin/sync\n7 shutdown❌6:0:shutdown:/sbin:/sbin/shutdown\n可以透过这个 sed 的以行为单位的显示功能， 就能够将某一个文件内的某些行号选择出来显示。")])]),s._v(" "),n("center",[n("strong",[s._v("数据的搜寻并显示")])]),s._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",[n("code",[s._v("搜索 /etc/passwd有root关键字的行\n[root@localhost ~]# nl /etc/passwd | sed '/root/p'\n1  root:x:0:0:root:/root:/bin/bash\n1  root:x:0:0:root:/root:/bin/bash\n2  daemon:x:1:1:daemon:/usr/sbin:/bin/sh\n3  bin:x:2:2:bin:/bin:/bin/sh\n4  sys:x:3:3:sys:/dev:/bin/sh\n5  sync:x:4:65534:sync:/bin:/bin/sync\n....下面忽略......\n如果root找到，除了输出所有行，还会输出匹配行。[规则从第一行一直找下去，找到root打印到不到也一直在打印]\n-------------------------------------------------------------------------------\n使用-n的时候将只打印包含模板的行。\n[root@localhost ~]# nl /etc/passwd | sed -n '/root/p'\n1  root:x:0:0:root:/root:/bin/bash\n10  operator:x:11:0:operator:/root:/sbin/nologin\n")])])]),n("center",[n("strong",[s._v("数据的搜寻并删除")])]),s._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",[n("code",[s._v("// 删除/etc/passwd所有包含root的行，其他行输出\n[root@localhost ~]# nl /etc/passwd | sed  '/root/d'\n2  bin:x:1:1:bin:/bin:/sbin/nologin\n3  daemon:x:2:2:daemon:/sbin:/sbin/nologin\n....下面忽略....\n# 第一行的匹配root已经删除了\n")])])]),n("center",[n("strong",[s._v("数据的搜寻并执行命令")])]),s._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",[n("code",[s._v("//搜索/etc/passwd,找到root对应的行，执行后面花括号中的一组命令\n//每个命令之间用分号分隔，这里把bash替换为blueshell，再输出这行：最后的q是退出。\n[root@localhost ~]# nl /etc/passwd | sed -n '/root/{s/bash/blueshell/;p;q}'    \n1  root:x:0:0:root:/root:/bin/blueshell\n")])])]),n("center",[n("strong",[s._v("数据的搜寻并替换")])]),s._v("\n除了整行的处理模式之外， sed 还可以用行为单位进行部分数据的搜寻并取代。基本上 sed 的搜寻与替代的与 vi 相当的类似！他有点像这样\n"),n("div",{staticClass:"language- extra-class"},[n("pre",[n("code",[s._v("sed 's/要被取代的字串/新的字串/g'\n------------------------------------------------------------------\n// 先观察原始信息，利用 `ip addr` 查询 IP\n[root@localhost ~]# ip addr\n1: lo: <LOOPBACK,UP,LOWER_UP> mtu 65536 qdisc noqueue state UNKNOWN qlen 1\n    link/loopback 00:00:00:00:00:00 brd 00:00:00:00:00:00\n    inet 127.0.0.1/8 scope host lo\n    valid_lft forever preferred_lft forever\n2: eth0: <BROADCAST,MULTICAST,UP,LOWER_UP> mtu 1500 qdisc pfifo_fast state UP qlen 1000\n    link/ether 00:16:3e:0a:e8:c3 brd ff:ff:ff:ff:ff:ff\n    inet 172.17.108.3/20 brd 172.17.111.255 scope global dynamic eth0\n    valid_lft 314049316sec preferred_lft 314049316sec\n------------------------------------------------------------------\n// 本机的ip是172.17.108.3 将 IP 前面的部分予以删除\n[root@localhost ~]# ip addr|grep \"scope global dynamic eth0\"|sed 's/^.*inet //g'\n172.17.108.3/20 brd 172.17.111.255 scope global dynamic eth0\n------------------------------------------------------------------\n接下来则是删除后续的部分，亦即：172.17.108.3/20 brd 172.17.111.255 scope global dynamic eth0 将 IP 后面的部分予以删除\n[root@localhost ~]# ip addr|grep \"scope global dynamic eth0\"|sed 's/^.*inet //g'|sed 's/\\/20 brd 172.17.111.255 scope global dynamic eth0//' \n172.17.108.3\n")])])]),n("center",[n("strong",[s._v("多点编辑")])]),s._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",[n("code",[s._v("// 一条sed命令，删除/etc/passwd第三行到末尾的数据，并把bash替换为blueshell\n[root@localhost ~]# nl /etc/passwd | sed -e '3,$d' -e 's/bash/blueshell/'\n1  root:x:0:0:root:/root:/bin/blueshell\n2  bin:x:1:1:bin:/bin:/sbin/nologin\n")])])]),n("blockquote",[n("p",[s._v("-e表示多点编辑，第一个编辑命令删除/etc/passwd第三行到末尾的数据，第二条命令搜索bash替换为blueshell")])]),s._v(" "),n("center",[n("strong",[s._v("直接修改文件内容(危险动作)")])]),s._v("\nsed 可以直接修改文件的内容，不必使用管道命令或数据流重导向！ 不过，由于这个动作会直接修改到原始的文件，所以请你千万不要随便拿系统配置来测试！ 我们还是使用下载的 regular_express.txt 文件来测试看看吧！\n"),n("div",{staticClass:"language- extra-class"},[n("pre",[n("code",[s._v("// 查看test.txt文件\n[root@localhost ~]# cat test.tst\n1111111111.\n2222222222.\n3333333333.\n4444444444.\n5555555555.\n------------------------------------------------------\n// 利用 sed 将 test.tst 内每一行结尾若为 . 则换成 !\n[root@localhost ~]# sed -i 's/\\.$/\\!/g' test.tst \n[root@localhost ~]# cat test.tst \n1111111111!\n2222222222!\n3333333333!\n4444444444!\n5555555555!\n------------------------------------------------------\n// 利用 sed 直接在 regular_express.txt 最后一行加入『# This is a test』\n[root@localhost ~]# sed -i '$a # This is a test' test.tst \n[root@localhost ~]# cat test.tst \n1111111111!\n2222222222!\n3333333333!\n4444444444!\n5555555555!\n# This is a test\n")])])]),n("h2",{attrs:{id:"df"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#df"}},[s._v("#")]),s._v(" df")]),s._v(" "),n("p",[s._v("Linux df命令用于显示目前在Linux系统上的文件系统的磁盘使用情况统计。")]),s._v(" "),n("Badge",{attrs:{text:"实例",type:"tig"}}),s._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",[n("code",[s._v("// 显示文件系统的磁盘使用情况统计：\n[root@localhost ~]# df\n文件系统        1K-块     已用内存 可用内存  已用% 挂载点\nFilesystem     1K-blocks    Used Available Use% Mounted on\n/dev/vda1       41151808 1656916  37381460   5% /\ndevtmpfs          932240       0    932240   0% /dev\ntmpfs             941744       0    941744   0% /dev/shm\ntmpfs             941744     336    941408   1% /run\ntmpfs             941744       0    941744   0% /sys/fs/cgroup\ntmpfs             188352       0    188352   0% /run/user/0\n")])])]),n("hr"),s._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",[n("code",[s._v("// 使用-h选项以KB以上的单位来显示，可读性高\n[root@localhost ~]# df -h\n文件系统        容量   已用  可用 已用% 挂载点\nFilesystem      Size  Used Avail Use% Mounted on\n/dev/vda1        40G  1.6G   36G   5% /\ndevtmpfs        911M     0  911M   0% /dev\ntmpfs           920M     0  920M   0% /dev/shm\ntmpfs           920M  336K  920M   1% /run\ntmpfs           920M     0  920M   0% /sys/fs/cgroup\ntmpfs           184M     0  184M   0% /run/user/0\n")])])]),n("hr"),s._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",[n("code",[s._v("// 用一个-i选项的df命令的输出显示inode信息而非块使用量。\n[root@localhost ~]# df -i \nFilesystem      Inodes IUsed   IFree IUse% Mounted on\n/dev/vda1      2621440 40886 2580554    2% /\ndevtmpfs        233060   333  232727    1% /dev\ntmpfs           235436     1  235435    1% /dev/shm\ntmpfs           235436   365  235071    1% /run\ntmpfs           235436    16  235420    1% /sys/fs/cgroup\ntmpfs           235436     1  235435    1% /run/user/0\n")])])]),n("hr"),s._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",[n("code",[s._v("// 显示所有的信息\n[root@localhost ~]# df --total\nFilesystem     1K-blocks    Used Available Use% Mounted on\n/dev/vda1       41151808 1656928  37381448   5% /\ndevtmpfs          932240       0    932240   0% /dev\ntmpfs             941744       0    941744   0% /dev/shm\ntmpfs             941744     336    941408   1% /run\ntmpfs             941744       0    941744   0% /sys/fs/cgroup\ntmpfs             188352       0    188352   0% /run/user/0\ntotal           45097632 1657264  41326936   4% -\n")])])]),n("hr"),s._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",[n("code",[s._v("// 查看全部文件系统\n[root@localhost ~]# df -a \nFilesystem     1K-blocks    Used Available Use% Mounted on\nrootfs                 -       -         -    - /\nsysfs                  0       0         0    - /sys\nproc                   0       0         0    - /proc\ndevtmpfs          932240       0    932240   0% /dev\nsecurityfs             0       0         0    - /sys/kernel/security\ntmpfs             941744       0    941744   0% /dev/shm\ndevpts                 0       0         0    - /dev/pts\ntmpfs             941744     336    941408   1% /run\ntmpfs             941744       0    941744   0% /sys/fs/cgroup\ncgroup                 0       0         0    - /sys/fs/cgroup/systemd\npstore                 0       0         0    - /sys/fs/pstore\ncgroup                 0       0         0    - /sys/fs/cgroup/cpuset\ncgroup                 0       0         0    - /sys/fs/cgroup/net_cls,net_prio\ncgroup                 0       0         0    - /sys/fs/cgroup/devices\ncgroup                 0       0         0    - /sys/fs/cgroup/pids\ncgroup                 0       0         0    - /sys/fs/cgroup/blkio\ncgroup                 0       0         0    - /sys/fs/cgroup/cpu,cpuacct\ncgroup                 0       0         0    - /sys/fs/cgroup/hugetlb\ncgroup                 0       0         0    - /sys/fs/cgroup/perf_event\ncgroup                 0       0         0    - /sys/fs/cgroup/memory\ncgroup                 0       0         0    - /sys/fs/cgroup/freezer\nconfigfs               0       0         0    - /sys/kernel/config\n/dev/vda1       41151808 1656928  37381448   5% /\nsystemd-1              -       -         -    - /proc/sys/fs/binfmt_misc\nmqueue                 0       0         0    - /dev/mqueue\nhugetlbfs              0       0         0    - /dev/hugepages\ndebugfs                0       0         0    - /sys/kernel/debug\nbinfmt_misc            0       0         0    - /proc/sys/fs/binfmt_misc\ntmpfs             188352       0    188352   0% /run/user/0\n")])])]),n("h2",{attrs:{id:"last"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#last"}},[s._v("#")]),s._v(" last")]),s._v(" "),n("p",[s._v("Linux last命令用于显示系统开机以来获是从每月初登入者的讯息。")]),s._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",[n("code",[s._v("-a 把从何处登入系统的主机名称或ip地址，显示在最后一行。\n-d 指定记录文件。指定记录文件。将IP地址转换成主机名称。\n-f <记录文件> 　指定记录文件。\n-n <显示列数>或-<显示列数> 　设置列出名单的显示列数。\n-R 不显示登入系统的主机名称或IP地址。\n-x 显示系统关机，重新开机，以及执行等级的改变等信息\n\n以下看所有的重启、关机记录\n\n[root@localhost ~]# last | grep reboot\nreboot   system boot  3.10.0-693.2.2.e Thu Aug  9 22:03 - 14:40 (17+16:37) \n\n[root@localhost ~]# last | grep shutdown\n")])])]),n("hr"),s._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",[n("code",[s._v("// 显示最后一列显示主机IP地址\n[root@localhost ~]# last -n 5 -a -i\nroot   pts/4    Thu May 13 17:25  still logged in  192.168.1.10\nroot   pts/2    Thu May 13 17:23 - 17:25 (00:02)   192.168.1.10\nroot   pts/1    Thu May 13 16:46  still logged in  192.168.1.10\nroot   pts/7    Thu May 13 15:36  still logged in  192.168.1.10\nroot   pts/9    Thu May 13 15:35  still logged in  192.168.1.10\n")])])]),n("h2",{attrs:{id:"思考"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#思考"}},[s._v("#")]),s._v(" 思考 "),n("Badge",{attrs:{text:"本章小结",type:"warn"}})],1),s._v(" "),n("h3",{attrs:{id:"_1-修改密码的命令为passwd，需要按enter键两次，如何一条命令快速修改密码呢？"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_1-修改密码的命令为passwd，需要按enter键两次，如何一条命令快速修改密码呢？"}},[s._v("#")]),s._v(" 1. 修改密码的命令为passwd，需要按Enter键两次，如何一条命令快速修改密码呢？")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('    //echo "密码" | passwd --stdin 用户名\n    [root@localhost ~]# echo "PZ6oJXC8qShAuT4lBD9sV02Rxd73Gv" | passwd --stdin root\n    Changing password for user root.\n    passwd: all authentication tokens updated successfully.\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br")])]),n("h3",{attrs:{id:"_2-企业服务器，某一天发现系统访问很慢，需要查看系统内核日志，请写出如何查看系统内核日志的命令？"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_2-企业服务器，某一天发现系统访问很慢，需要查看系统内核日志，请写出如何查看系统内核日志的命令？"}},[s._v("#")]),s._v(" 2. 企业服务器，某一天发现系统访问很慢，需要查看系统内核日志，请写出如何查看系统内核日志的命令？")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("/var/log/message\t系统启动后的信息和错误日志，是Red Hat Linux中最常用的日志之一 \n/var/log/secure\t    与安全相关的日志信息 \n/var/log/maillog\t与邮件相关的日志信息 \n/var/log/cron\t    与定时任务相关的日志信息 \n/var/log/spooler\t与UUCP和news设备相关的日志信息 \n/var/log/boot.log\t守护进程启动和停止相关的日志消息\n/var/log/wtmp       该日志文件永久记录每个用户登录、注销及系统的启动、停机的事件（用last查看）\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br")])]),n("hr"),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("系统： \n# uname -a   # 查看内核/操作系统/CPU信息 \n# cat /etc/issue \n# cat /etc/redhat-release # 查看操作系统版本 \n# cat /proc/cpuinfo  # 查看CPU信息 \n# hostname   # 查看计算机名 \n# lspci -tv   # 列出所有PCI设备 \n# lsusb -tv   # 列出所有USB设备 \n# lsmod    # 列出加载的内核模块 \n# env    # 查看环境变量 \n资源： \n# free -m   # 查看内存使用量和交换区使用量 \n# df -h    # 查看各分区使用情况 \n# du -sh <目录名>  # 查看指定目录的大小 \n# grep MemTotal /proc/meminfo # 查看内存总量 \n# grep MemFree /proc/meminfo # 查看空闲内存量 \n# uptime   # 查看系统运行时间、用户数、负载 \n# cat /proc/loadavg  # 查看系统负载 \n磁盘和分区： \n# mount | column -t  # 查看挂接的分区状态 \n# fdisk -l   # 查看所有分区 \n# swapon -s   # 查看所有交换分区 \n# hdparm -i /dev/hda  # 查看磁盘参数(仅适用于IDE设备) \n# dmesg | grep IDE  # 查看启动时IDE设备检测状况 \n网络： \n# ifconfig   # 查看所有网络接口的属性 \n# iptables -L   # 查看防火墙设置 \n# route -n   # 查看路由表 \n# netstat -lntp   # 查看所有监听端口 \n# netstat -antp   # 查看所有已经建立的连接 \n# netstat -s   # 查看网络统计信息 \n进程： \n# ps -ef   # 查看所有进程 \n# top    # 实时显示进程状态（另一篇文章里面有详细的介绍） \n用户： \n# w    # 查看活动用户 \n# id <用户名>   # 查看指定用户信息 \n# last    # 查看用户登录日志 \n# cut -d: -f1 /etc/passwd # 查看系统所有用户 \n# cut -d: -f1 /etc/group # 查看系统所有组 \n# crontab -l   # 查看当前用户的计划任务 \n服务： \n# chkconfig –list  # 列出所有系统服务 \n# chkconfig –list | grep on # 列出所有启动的系统服务 \n程序： \n# rpm -qa   # 查看所有安装的软件包\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br"),n("span",{staticClass:"line-number"},[s._v("25")]),n("br"),n("span",{staticClass:"line-number"},[s._v("26")]),n("br"),n("span",{staticClass:"line-number"},[s._v("27")]),n("br"),n("span",{staticClass:"line-number"},[s._v("28")]),n("br"),n("span",{staticClass:"line-number"},[s._v("29")]),n("br"),n("span",{staticClass:"line-number"},[s._v("30")]),n("br"),n("span",{staticClass:"line-number"},[s._v("31")]),n("br"),n("span",{staticClass:"line-number"},[s._v("32")]),n("br"),n("span",{staticClass:"line-number"},[s._v("33")]),n("br"),n("span",{staticClass:"line-number"},[s._v("34")]),n("br"),n("span",{staticClass:"line-number"},[s._v("35")]),n("br"),n("span",{staticClass:"line-number"},[s._v("36")]),n("br"),n("span",{staticClass:"line-number"},[s._v("37")]),n("br"),n("span",{staticClass:"line-number"},[s._v("38")]),n("br"),n("span",{staticClass:"line-number"},[s._v("39")]),n("br"),n("span",{staticClass:"line-number"},[s._v("40")]),n("br"),n("span",{staticClass:"line-number"},[s._v("41")]),n("br"),n("span",{staticClass:"line-number"},[s._v("42")]),n("br"),n("span",{staticClass:"line-number"},[s._v("43")]),n("br"),n("span",{staticClass:"line-number"},[s._v("44")]),n("br"),n("span",{staticClass:"line-number"},[s._v("45")]),n("br"),n("span",{staticClass:"line-number"},[s._v("46")]),n("br")])])],1)}),[],!1,null,null,null);t.default=e.exports}}]);