(window.webpackJsonp=window.webpackJsonp||[]).push([[26],{374:function(s,n,e){"use strict";e.r(n);var a=e(43),t=Object(a.a)({},(function(){var s=this,n=s.$createElement,e=s._self._c||n;return e("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[e("h1",{attrs:{id:"linux文件服务器企业实战"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#linux文件服务器企业实战"}},[s._v("#")]),s._v(" Linux文件服务器企业实战")]),s._v(" "),e("p",[s._v("在计算机局域网中，以文件数据共享为目标，需要将供多台计算机共享的文件存放于一台计算机中。这台计算机就被称为文件服务器。")]),s._v(" "),e("p",[s._v("文件服务器具有分时系统管理的全部功能，能够对全网统一管理，能够提供网络用户访问文件、目录的并发控制和安全保密措施。")]),s._v(" "),e("p",[s._v("文件服务器一台特殊功能的计算机，其主要目的是向客户机提供文件服务。文件服务器可以是一台能够运行其他应用的通用计算机，也可以是一台专门提供文件服务的专用计算机。")]),s._v(" "),e("h2",{attrs:{id:"进程与线程的概念及区别"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#进程与线程的概念及区别"}},[s._v("#")]),s._v(" 进程与线程的概念及区别")]),s._v(" "),e("p",[s._v("Linux系统各种软件和服务存在于系统，必然会占用系统的各种资源，系统资源是如何分配和调度的。")]),s._v(" "),e("p",[s._v("进程，是并发执行的程序在执行过程中分配和管理资源的基本单位，是一个动态概念，竟争计算机系统资源的基本单位。每一个进程都有一个自己的地址空间，即进程空间或（虚空间）。进程空间的大小与处理机的位数有关，一个 16 位长处理机的进程空间大小为 216 ，而 32 位处理机的进程空间大小为 232 。进程至少有 5 种基本状态，它们是：初始态，执行态，等待状态，就绪状态，终止状态。")]),s._v(" "),e("p",[s._v("线程，在网络或多用户环境下，一个服务器通常需要接收大量且不确定数量用户的并发请求，为每一个请求都创建一个进程显然是行不通的，——无论是从系统资源开销方面或是响应用户请求的效率方面来看。因此，操作系统中线程的概念便被引进了。线程，是进程的一部分，一个没有线程的进程可以被看作是单线程的。线程有时又被称为轻权进程或轻量级进程，也是 CPU 调度的一个基本单位。")]),s._v(" "),e("p",[s._v("说到这里，我们对进程与线程都有了一个大体上的印象，现在开始说说二者大致的区别。")]),s._v(" "),e("p",[s._v("进程的执行过程是线状的， 尽管中间会发生中断或暂停，但该进程所拥有的资源只为该线状执行过程服务。一旦发生进程上下文切换，这些资源都是要被保护起来的。这是进程宏观上的执行过 程。而进程又可有单线程进程与多线程进程两种。我们知道，进程有 一个进程控制块 PCB ，相关程序段 和 该程序段对其进行操作的数据结构集 这三部分，单线程进程的执行过程在宏观上是线性的，微观上也只有单一的执行过程；而多线程进程在宏观上的执行过程同样为线性的，但微观上却可以有多个执行 操作（线程），如不同代码片段以及相关的数据结构集。线程的改变只代表了 CPU 执行过程的改变，而没有发生进程所拥有的资源变化。除了 CPU 之外，计算机内的软硬件资源的分配与线程无关，线程只能共享它所属进程的资源。与进程控制表和 PCB 相似，每个线程也有自己的线程控制表 TCB ，而这个 TCB 中所保存的线程状态信息则要比 PCB 表少得多，这些信息主要是相关指针用堆栈（系统栈和用户栈），寄存器中的状态数据。进程拥有一个完整的虚拟地址空间，不依赖于线程而独立存在；反之，线程是进程的一部分，没有自己的地址空间，与进程内的其他线程一起共享分配给该进程的所有资源。")]),s._v(" "),e("p",[s._v("线程可以有效地提高系统的执行效率，但并不是在所有计算机系统中都是适用的，如某些很少做进程调度和切换的实时系统。使用线程的好处是有多个任务需要处理 机处理时，减少处理机的切换时间；而且，线程的创建和结束所需要的系统开销也比进程的创建和结束要小得多。最适用使用线程的系统是多处理机系统和网络系统 或分布式系统。")]),s._v(" "),e("p",[e("strong",[s._v("进程和线程的区别")])]),s._v(" "),e("p",[s._v("(1)、地址空间:进程内的一个执行单元;进程至少有一个线程;它们共享进程的地址空间;而进程有自己独立的地址空间;")]),s._v(" "),e("p",[s._v("(2)、资源拥有:进程是资源分配和拥有的单位,同一个进程内的线程共享进程的资源")]),s._v(" "),e("p",[s._v("(3)、线程是处理器调度的基本单位,但进程不是.")]),s._v(" "),e("p",[s._v("(4)、二者均可并发执行")]),s._v(" "),e("p",[e("strong",[s._v("优缺点")])]),s._v(" "),e("p",[s._v("线程执行开销小，但是不利于资源的管理和保护。线程适合在SMP机器（双CPU系统）上运行。")]),s._v(" "),e("p",[s._v("进程执行开销大，但是能够很好的进行资源管理和保护。进程可以跨机器前移。")]),s._v(" "),e("p",[e("strong",[s._v("何时使用多进程，何时使用多线程？")])]),s._v(" "),e("p",[s._v("对资源的管理和保护要求高，不限制开销和效率时，使用多进程。")]),s._v(" "),e("p",[s._v("要求效率高，频繁切换时，资源的保护管理要求不是很高时，使用多线程。")]),s._v(" "),e("h2",{attrs:{id:"vsftpd服务器企业实战"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#vsftpd服务器企业实战"}},[s._v("#")]),s._v(" Vsftpd服务器企业实战")]),s._v(" "),e("p",[s._v("文件传输协议（File Transfer Protocol，FTP），基于该协议FTP客户端与服务器端可以实现共享文件、上传文件、下载文件。FTP基于TCP协议生成一个虚拟的连接，主要用于控制FTP连接信息，同时在生成一个单独的TCP连接用于FTP协议传输。用户可以通过客户端像服务器端上传、下载、删除文件，FTP服务器端可以同时提供给多人共享使用。")]),s._v(" "),e("p",[s._v("FTP服务是cllent/server（简称C/S）模式，基于FTP协议实现FTP文件对外共享及传输的软件称为FTP服务器源端，客户端基于FTP协议，则称为FTP客户端，FTP客户端可以向服务器端上传、下载。")]),s._v(" "),e("h3",{attrs:{id:"ftp传输模式"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#ftp传输模式"}},[s._v("#")]),s._v(" FTP传输模式")]),s._v(" "),e("p",[s._v("FTP基于C/S模式，FTP客户端与服务器端有两种传输模式，分别是FTP主动模式、FTP被动模式，主被动模式是以FTP服务器端为参照物。")]),s._v(" "),e("p",[e("strong",[s._v("Port模式（主动模式）--\x3e 默认")])]),s._v(" "),e("p",[s._v("Ftp客户端首先和Ftp server的tcp 21端口建立连接，通过这个通道发送命令，客户端要接受数据的时候在这个通道上发送Port命令，Port命令包含了客户端用什么端口（一个大于1024的端口）接受数据，在传送数据的时候，服务器端通过自己的TCP 20端口发送数据。这个时候数据连接由server向client建立一个连接。")]),s._v(" "),e("p",[s._v("Port交互流程：")]),s._v(" "),e("p",[s._v("client端：client链接server的21端口，并发送用户名密码和一个随机在大于1024上的端口及port命令给server，表明采用主动模式，并开放那个随机的端口。")]),s._v(" "),e("p",[s._v("server端：server收到client发来的Port主动模式命令与端口后，会通过自己的20端口与client那个随机的端口连接后，进行数据传输。")]),s._v(" "),e("p",[e("strong",[s._v("Pasv模式（被动方式）")])]),s._v(" "),e("p",[s._v("建立控制通道和Port模式类似，当客户端通过这个通道发送Pasv命令的时候，Ftp server打开了一个位于1024和5000之间的随机端口并且通知客户端在这个端口上进行传输数据请求，然后Ftp server将通过这个端口进行数据传输。这个时候数据连接由client向server建立连接。")]),s._v(" "),e("p",[s._v("Pasv交互流程：")]),s._v(" "),e("p",[s._v("Client：client连接server的21号端口，发送用户名密码及pasv命令给server，表明采用被动模式。")]),s._v(" "),e("p",[s._v("server：server收到client发来的pasv被动模式命令之后，把随机开放在大于1024上的端口告诉client，client再用自己的20 端口与server的那个随机端口进行连接后进行数据传输。")]),s._v(" "),e("p",[e("strong",[s._v("总结")])]),s._v(" "),e("p",[s._v("如果从C/S模型这个角度来说，PORT对于服务器来说是OUTBOUND（出站），而PASV模式对于服务器是INBOUND（入站），这一点请特别注意，尤其是在使用防火墙的企业里，这一点非常关键，如果设置错了，那么客户将无法连接。")]),s._v(" "),e("h3",{attrs:{id:"vsftpd服务器简介"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#vsftpd服务器简介"}},[s._v("#")]),s._v(" Vsftpd服务器简介")]),s._v(" "),e("p",[s._v("vsftpd是一款在Linux发行版中最受推崇的FTP服务器程序。特点是小巧轻快，安全易用。稳定高效、满足企业跨部门、多用户的使用等。")]),s._v(" "),e("p",[s._v("vsftpd 是（very secure FTP daemon）的缩写，安全性是它的一个最大的特点。vsftpd 是一个 UNIX 类操作系统上运行的服务器的名字，它可以运行在诸如 Linux、BSD、Solaris、 HP-UNIX等系统上面，是一个完全免费的、开放源代码的ftp服务器软件，支持很多其他的 FTP 服务器所不支持的特征。优点：非常高的安全性需求、带宽限制、良好的可伸缩性、可创建虚拟用户、支持IPv6、速率高等。")]),s._v(" "),e("h3",{attrs:{id:"vsftpd服务器安装配置"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#vsftpd服务器安装配置"}},[s._v("#")]),s._v(" Vsftpd服务器安装配置")]),s._v(" "),e("p",[s._v("Vsftpd服务器端安装有两种方式：一是YUM方式安装，二是基于源码编译安装，最终实现的效果是一样的，下面是基于YUM安装Vsftpd。")]),s._v(" "),e("p",[s._v("一、yum安装Vsftpd服务端")]),s._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[s._v("yum install vsftpd* -y \n")])])]),e("p",[s._v("二、查看配置文件的路径")]),s._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[s._v("rpm -ql vsftpd |more     \n")])])]),e("p",[s._v("三、启动Vsftpd服务")]),s._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[s._v("systemctl restart vsftpd \n\n// 查看进程是否启动\n[root@localhost ~]# ps -ef |grep vsftpd\nroot      7397     1  0 14:57 ?        00:00:00 /usr/sbin/vsftpd /etc/vsftpd/vsftpd.conf\nroot      7401  7328  0 14:57 pts/1    00:00:00 grep --color=auto vsftpd\n\n// 查看是否开启21端口\n[root@localhost ~]# ss -ntl\nState       Recv-Q Send-Q         Local Address:Port                Peer Address:Port              \nLISTEN      0      128                        *:22                             *:*                  \nLISTEN      0      32                        :::21                            :::*  \n")])])]),e("p",[s._v("四、启动Vsftpd服务后，通过Windows客户端资源管理器访问Vsftpd服务器.(192.168.111.121--\x3e本机内网ip)")]),s._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[s._v("ftp://192.168.111.121\n")])])]),e("p",[s._v("五、存放文件的路径")]),s._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[s._v("[root@localhost pub]# pwd\n/var/ftp/pub\n")])])]),e("blockquote",[e("p",[s._v("/etc/vsftpd/vsftpd.conf  #主配置文件\n"),e("br"),s._v("\n/etc/vsftpd/ftpusers     #不能访问FTP用户列表\n"),e("br"),s._v("\n/etc/vsftpd/user_list    #不能访问FTP用户列表")])]),s._v(" "),e("p",[e("strong",[s._v("vsftpd配置文件"),e("code",[s._v("/etc/vsftpd/vsftpd.conf")]),s._v("详解！")])]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("#设置为NO代表不允许匿名\nanonymous_enable=YES\n \n#设定本地用户可以访问，主要是虚拟宿主用户，如果设为NO那么所欲虚拟用户将无法访问。\nlocal_enable=YES\n \n#可以进行写的操作\nwrite_enable=YES\n \n#设定上传文件的权限掩码\nlocal_umask=022\n \n#禁止匿名用户上传\nanon_upload_enable=NO\n \n#禁止匿名用户建立目录\nanon_mkdir_write_enable=NO\n \n# 设定开启目录标语功能\ndirmessage_enable=YES\n \n# 设定开启日志记录功能\nxferlog_enable=YES\n \n#设定端口20进行数据连接\nconnect_from_port_20=YES\n \n#设定禁止上传文件更改宿主\nchown_uploads=NO\n \n#设定vsftpd服务日志保存路劲。注意：改文件默认不纯在，需手动touch，且由于这里更改了vsftpd服务的宿主用户为手动建立的vsftpd，则必\n须注意给予该用户对日志的读取权限否则服务启动失败。\nxferlog_file=/var/log/vsftpd.log\n \n#设定日志使用标准的记录格式\nxferlog_std_format=YES\n \n#设定空闲链接超时时间，这里使用默认/秒。\nidle_session_timeout=600\n \n#设定最大连接传输时间，这里使用默认，将具体数值留给每个用户具体制定，默认120/秒\ndata_connection_timeout=3600\n \n#设定支撑vsftpd服务的宿主用户为手动建立的vsftpd用户。注意：一旦更改宿主用户，需一起与该服务相关的读写文件的读写赋权问题.\nnopriv_user=vsftpd\n \n#设定支持异步传输的功能\nasync_abor_enable=YES\n \n#设置vsftpd的登陆标语\nftpd_banner=hello 欢迎登陆\n \n#禁止用户登出自己的ftp主目录\nchroot_list_enable=NO\n \n#禁止用户登陆ftp后使用ls -R 命令。该命令会对服务器性能造成巨大开销，如果该项运行当多个用户使用该命令会对服务器造成威胁。\nls_recurse_enable=NO\n\n#启用IPv6监听\nlisten_ipv6=YES\n \n#设定vsftpd服务工作在standalone模式下。所谓standalone模式就是该服务拥有自己的守护进程，在ps -A可以看出vsftpd的守护进程名。如果\n不想工作在standalone模式下，可以选择SuperDaemon模式，注释掉即可，在该模式下vsftpd将没有自己的守护进程，而是由超级守护进程Xinetd全权代理，>与此同时，vsftpd服务的许多功能，将得不到实现。\nlisten=YES\n \n#设定userlist_file中的用户将不能使用ftp\nuserlist_enable=YES\n \n \n#设定pam服务下的vsftpd验证配置文件名。因此，PAM验证将参考/etc/pam.d/下的vsftpd文件配置。\npam_service_name=vsftpd\n \n#设定支持TCPwrappers\ntcp_wrappers=YES\n \n#########以下是关于虚拟用户支持的重要配置项目，默认.conf配置文件中是不包含这些项目的，需手动添加。#########\n#启用虚拟用户功能\nguest_enable=YES\n \n#指定虚拟的宿主用户\nguest_username=virtusers\n \n#设定虚拟用户的权限符合他们的宿主用户\nvirtual_use_local_privs=YES\n \n#设定虚拟用户个人vsftp的配置文件存放路劲。这个被指定的目录里，将被存放每个虚拟用户个性的配置文件，注意的地方是：配置文件名必须\n和虚拟用户名相同。\nuser_config_dir=/etc/vsftpd/vconf\n \n#禁止反向域名解析，若是没有添加这个参数可能会出现用户登陆较慢，或则客户链接不上ftp的现象\nreverse_lookup_enable=NO\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br"),e("span",{staticClass:"line-number"},[s._v("21")]),e("br"),e("span",{staticClass:"line-number"},[s._v("22")]),e("br"),e("span",{staticClass:"line-number"},[s._v("23")]),e("br"),e("span",{staticClass:"line-number"},[s._v("24")]),e("br"),e("span",{staticClass:"line-number"},[s._v("25")]),e("br"),e("span",{staticClass:"line-number"},[s._v("26")]),e("br"),e("span",{staticClass:"line-number"},[s._v("27")]),e("br"),e("span",{staticClass:"line-number"},[s._v("28")]),e("br"),e("span",{staticClass:"line-number"},[s._v("29")]),e("br"),e("span",{staticClass:"line-number"},[s._v("30")]),e("br"),e("span",{staticClass:"line-number"},[s._v("31")]),e("br"),e("span",{staticClass:"line-number"},[s._v("32")]),e("br"),e("span",{staticClass:"line-number"},[s._v("33")]),e("br"),e("span",{staticClass:"line-number"},[s._v("34")]),e("br"),e("span",{staticClass:"line-number"},[s._v("35")]),e("br"),e("span",{staticClass:"line-number"},[s._v("36")]),e("br"),e("span",{staticClass:"line-number"},[s._v("37")]),e("br"),e("span",{staticClass:"line-number"},[s._v("38")]),e("br"),e("span",{staticClass:"line-number"},[s._v("39")]),e("br"),e("span",{staticClass:"line-number"},[s._v("40")]),e("br"),e("span",{staticClass:"line-number"},[s._v("41")]),e("br"),e("span",{staticClass:"line-number"},[s._v("42")]),e("br"),e("span",{staticClass:"line-number"},[s._v("43")]),e("br"),e("span",{staticClass:"line-number"},[s._v("44")]),e("br"),e("span",{staticClass:"line-number"},[s._v("45")]),e("br"),e("span",{staticClass:"line-number"},[s._v("46")]),e("br"),e("span",{staticClass:"line-number"},[s._v("47")]),e("br"),e("span",{staticClass:"line-number"},[s._v("48")]),e("br"),e("span",{staticClass:"line-number"},[s._v("49")]),e("br"),e("span",{staticClass:"line-number"},[s._v("50")]),e("br"),e("span",{staticClass:"line-number"},[s._v("51")]),e("br"),e("span",{staticClass:"line-number"},[s._v("52")]),e("br"),e("span",{staticClass:"line-number"},[s._v("53")]),e("br"),e("span",{staticClass:"line-number"},[s._v("54")]),e("br"),e("span",{staticClass:"line-number"},[s._v("55")]),e("br"),e("span",{staticClass:"line-number"},[s._v("56")]),e("br"),e("span",{staticClass:"line-number"},[s._v("57")]),e("br"),e("span",{staticClass:"line-number"},[s._v("58")]),e("br"),e("span",{staticClass:"line-number"},[s._v("59")]),e("br"),e("span",{staticClass:"line-number"},[s._v("60")]),e("br"),e("span",{staticClass:"line-number"},[s._v("61")]),e("br"),e("span",{staticClass:"line-number"},[s._v("62")]),e("br"),e("span",{staticClass:"line-number"},[s._v("63")]),e("br"),e("span",{staticClass:"line-number"},[s._v("64")]),e("br"),e("span",{staticClass:"line-number"},[s._v("65")]),e("br"),e("span",{staticClass:"line-number"},[s._v("66")]),e("br"),e("span",{staticClass:"line-number"},[s._v("67")]),e("br"),e("span",{staticClass:"line-number"},[s._v("68")]),e("br"),e("span",{staticClass:"line-number"},[s._v("69")]),e("br"),e("span",{staticClass:"line-number"},[s._v("70")]),e("br"),e("span",{staticClass:"line-number"},[s._v("71")]),e("br"),e("span",{staticClass:"line-number"},[s._v("72")]),e("br"),e("span",{staticClass:"line-number"},[s._v("73")]),e("br"),e("span",{staticClass:"line-number"},[s._v("74")]),e("br"),e("span",{staticClass:"line-number"},[s._v("75")]),e("br"),e("span",{staticClass:"line-number"},[s._v("76")]),e("br"),e("span",{staticClass:"line-number"},[s._v("77")]),e("br"),e("span",{staticClass:"line-number"},[s._v("78")]),e("br"),e("span",{staticClass:"line-number"},[s._v("79")]),e("br"),e("span",{staticClass:"line-number"},[s._v("80")]),e("br"),e("span",{staticClass:"line-number"},[s._v("81")]),e("br"),e("span",{staticClass:"line-number"},[s._v("82")]),e("br"),e("span",{staticClass:"line-number"},[s._v("83")]),e("br"),e("span",{staticClass:"line-number"},[s._v("84")]),e("br"),e("span",{staticClass:"line-number"},[s._v("85")]),e("br"),e("span",{staticClass:"line-number"},[s._v("86")]),e("br"),e("span",{staticClass:"line-number"},[s._v("87")]),e("br"),e("span",{staticClass:"line-number"},[s._v("88")]),e("br"),e("span",{staticClass:"line-number"},[s._v("89")]),e("br"),e("span",{staticClass:"line-number"},[s._v("90")]),e("br"),e("span",{staticClass:"line-number"},[s._v("91")]),e("br")])]),e("p",[e("strong",[s._v("FTP主被动模式的选择，默认为主动模式，设置为被动模式的方法：")])]),s._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[s._v("pasv_enable=YES\npasv_min_port=60000\npasv_max_port=60100\n\nservice iptables start 打开防火墙\niptables -I INPUT  -p tcp  --dport 10020:10040  -j ACCEPT\niptables -I INPUT -p tcp --dport 21 -j ACCEPT\n")])])]),e("h3",{attrs:{id:"vsftpd匿名用户配置"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#vsftpd匿名用户配置"}},[s._v("#")]),s._v(" Vsftpd匿名用户配置")]),s._v(" "),e("p",[s._v("Vsftpd默认以匿名用户访问，匿名用户默认访问的FTP服务器发布端路径为/var/ftp/pub,匿名用户只有查看的权限，无法创建、删除、修改。如需关闭FTP匿名用户访问，需要修改配置文件"),e("code",[s._v("/etc/vsftpd/vsftpd.conf")]),s._v("，将"),e("code",[s._v("anonymous_enable=YES")]),s._v("修改为"),e("code",[s._v("anonymous_enable=NO")]),s._v(",重启Vsftpd服务即可。")]),s._v(" "),e("p",[s._v("如果允许匿名用户上传、下载、删除文件，需要修改配置文件"),e("code",[s._v("/etc/vsftpd/vsftpd.conf")]),s._v("，加入以下代码：")]),s._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[s._v("anon_upload_enable=YES      # 允许匿名用户上传\nanon_mkdir_write_enable=YES # 允许匿名用户建立目录\nanon_other_write_enable=YES # 允许匿名用户其他人写入权限\n")])])]),e("p",[e("strong",[s._v("匿名用户完整的vsftpd.conf配置文件代码如下：")])]),s._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[s._v("anonymous_enable=YES\nlocal_enable=YES\nwrite_enable=YES\nlocal_umask=022\nanon_upload_enable=YES\nanon_mkdir_write_enable=YES\nanon_other_write_enable=YES\ndirmessage_enable=YES\nxferlog_enable=YES\nconnect_from_port_20=YES\nxferlog_std_format=YES\nlisten=NO\nlisten_ipv6=YES\npam_service_name=vsftpd\nuserlist_enable=YES\ntcp_wrappers=YES\n")])])]),e("p",[s._v("由于默认Vsftpd匿名用户有两种：anonymous、ftp，所以匿名用户如果需要上传文件、删除及修改等权限，需要Vsftpd用户对/var/ftp/pub/目录有写权限，使用chown和chmod设置权限，命令如下：")]),s._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[s._v("chown -R ftp:ftp /var/ftp/pub\nchmod o+w /var/ftp/pub\n")])])]),e("p",[s._v("如上vsftpd.conf配置文件配置完毕，同时权限设置完毕，重启vsftpd服务即可，通过Windows客户端访问，能够上传文件、删除文件、创建目录等操作。")]),s._v(" "),e("h4",{attrs:{id:"ftp操作文件报-550-create-directory-operation-failed-解决方法？"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#ftp操作文件报-550-create-directory-operation-failed-解决方法？"}},[s._v("#")]),s._v(" ftp操作文件报“550 create directory operation failed”解决方法？")]),s._v(" "),e("p",[e("strong",[s._v('linux下文件夹属性设置正确，操作ftp文件（如新建文件/文件夹, 删除文件, 重命名等都不可操作) 弹出 "550 create directory operation failed" 的错误信息')])]),s._v(" "),e("p",[e("strong",[s._v("原因:")])]),s._v(" "),e("p",[s._v("是SELinux(Security-Enhanced Linux)----是美国国家安全局对于强制访问控制的实现, 是Linux 上最杰出的新安全子系统.)安装机制搞的鬼.只要disable SELinux或者permissive SELinux就可以了.")]),s._v(" "),e("p",[e("strong",[s._v("解决命令：")])]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("sed -i.bak 's/SELINUX=enforcing/SELINUX=permissive/' /etc/selinux/config && setenforce 0 && getenforce\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("h3",{attrs:{id:"vsftpd系统用户配置"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#vsftpd系统用户配置"}},[s._v("#")]),s._v(" Vsftpd系统用户配置")]),s._v(" "),e("p",[s._v("Vsftpd匿名用户设置完毕后，任何人都可以查看FTP服务器端的文件、目录，甚至可以修改、删除、文件和目录，如果存放私密文件在FTP服务器端，并保证文件或者目录专属于拥有者。")]),s._v(" "),e("p",[s._v("实现Vsftpd系统用户方式验证，只需在Linux系统中设置多个用户即可，创建用户使用useradd指令，同时给用户设置密码，即可通过用户和密码登陆FTP，进行文件上传、下载、删除等操作。Vsftpd系统用户实现方法步骤如下：")]),s._v(" "),e("p",[s._v("一、Linux系统中创建系统用户xingzheng、qianduan,分别设置密码为123456,456789。")]),s._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[s._v("useradd xingzheng\nuseradd qianduan\necho 123456 |passwd --stdin xingzheng\necho 456789 |passwd --stdin qianduan\n")])])]),e("p",[s._v("二、修改vsftpd.conf配置文件代码如下：")]),s._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[s._v("anonymous_enable=NO\nlocal_enable=YES\nwrite_enable=YES\nlocal_umask=022\ndirmessage_enable=YES\nxferlog_enable=YES\nconnect_from_port_20=YES\nxferlog_std_format=YES\nlisten=NO\nlisten_ipv6=YES\npam_service_name=vsftpd\nuserlist_enable=YES\ntcp_wrappers=YES\n")])])]),e("p",[s._v("三、通过Windows资源客户端验证，使xingzheng，qiandaun用户登陆FTP服务器，即可上传、下载、删除文件，xingzheng，qiandaun系统用户上传文件的家目录在/home/xingzheng，/home/qiandaun下。")]),s._v(" "),e("h3",{attrs:{id:"vsftpd虚拟用户配置"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#vsftpd虚拟用户配置"}},[s._v("#")]),s._v(" Vsftpd虚拟用户配置")]),s._v(" "),e("p",[s._v("Vsftpd基于系统用户访问FTP服务器，系统用户越来越多不利于管理，而且不利于系统安全，为了更加安全的使用Vsftpd服务，可以使用Vsftpd虚拟用户的方式。")]),s._v(" "),e("p",[s._v("Vsftpd虚拟用户原理为了虚拟用户没有实际的正式系统用户，而是通过映射到其中一个真实用户以及设置相应的权限来实现访问验证，虚拟用户不能登录Linux系统，从而让系统更加安全可靠。")]),s._v(" "),e("p",[s._v("（一）、安装Vsftpd虚拟用户需要用到的软件及认证的模块")]),s._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[s._v("yum install pam* libdb-utils libdb* --skip-broken -y\n")])])]),e("p",[s._v("（二）、创建虚拟用户临时文件"),e("code",[s._v("/etc/vsftpd/ftpusers.txt")]),s._v("，新建虚拟用户和密码，其中zhang，wang为虚拟用户名，123456为密码，有多少个用户，以此格式填写即可。（奇行为用户名，偶行为密码）")]),s._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[s._v("zhang\n123456\nwang\n123456\n")])])]),e("p",[s._v("（三）、生成Vsftpd虚拟用户数据库认证文件，权限设为700或者600；")]),s._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[s._v("db_load -T -t hash -f /etc/vsftpd/ftpusers.txt  /etc/vsftpd/vsftpd_login.db\nchmod 700 /etc/vsftpd/vsftpd_login.db\n")])])]),e("p",[s._v("（四）、配置PAM认证文件"),e("code",[s._v("/etc/pam.d/vsftpd")]),s._v(",行首添加以下两行代码，其他注释掉")]),s._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[s._v("#%PAM-1.0\nauth       required     /lib64/security/pam_userdb.so db=/etc/vsftpd/vsftpd_login\naccount    required     /lib64/security/pam_userdb.so db=/etc/vsftpd/vsftpd_login\n#session    optional     pam_keyinit.so    force revoke\n#auth       required    pam_listfile.so item=user sense=deny file=/etc/vsftpd/ftpusers onerr=succeed\n#auth       required    pam_shells.so\n#auth       include     password-auth\n#account    include     password-auth\n#session    required     pam_loginuid.so\n#session    include     password-auth\n")])])]),e("p",[s._v("（五）、Vsftpd虚拟用户需要映射到一个系统用户，该系统用户不需要密码，也不需要登陆，主要用于虚拟用户映射使用，创建用户命令：")]),s._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[s._v("useradd -s /sbin/nologin ftpuser\n")])])]),e("p",[s._v("（六）、完整的"),e("code",[s._v("/etc/vsftpd/vsftpd.conf")]),s._v("配置文件代码如下：")]),s._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[s._v("#设置为NO代表不允许匿名\nanonymous_enable=YES\n#设定本地用户可以访问，主要是虚拟宿主用户，如果设为NO那么所欲虚拟用户将无法访问。\nlocal_enable=YES\n#可以进行写的操作\nwrite_enable=YES\n#设定上传文件的权限掩码\nlocal_umask=022\n# 设定开启目录标语功能\ndirmessage_enable=YES\n# 设定开启日志记录功能\nxferlog_enable=YES\n#设定端口20进行数据连接\nconnect_from_port_20=YES\n#设定日志使用标准的记录格式\nxferlog_std_format=YES\n#设定vsftpd服务工作在standalone模式下。所谓standalone模式就是该服务拥有自己的守护进程，在ps -A可以看出vsftpd的守护进程名。如果\n不想工作在standalone模式下，可以选择SuperDaemon模式，注释掉即可，在该模式下vsftpd将没有自己的守护进程，而是由超级守护进程Xinetd全权代理，>与此同时，vsftpd服务的许多功能，将得不到实现。\nlisten=NO\n#启用IPv6监听\nlisten_ipv6=YES\n#设定userlist_file中的用户将不能使用ftp\nuserlist_enable=YES\n#设定支持TCPwrappers\ntcp_wrappers=YES\n# 虚拟用户启用PAM认证\npam_service_name=vsftpd\n# 启用虚拟用户\nguest_enable=YES\n# 映射虚拟用户至系统用户ftpuser\nguest_username=ftpuser\n# 设置虚拟用户配置文件所在位置\nuser_config_dir=/etc/vsftpd/vsftpd_user_conf\n# 虚拟用户使用与本地用户相同的权限\nvirtual_use_local_privs=YES\n")])])]),e("p",[s._v("（七）、至此所有虚拟用户共同使用"),e("code",[s._v("/home/ftpuser")]),s._v("主目录实现文件的上传与下载，可以在"),e("code",[s._v("/etc/vsftpd/vsftpd_user_conf")]),s._v("目录创建虚拟用户各自的配置文件，创建虚拟用户配置文件主目录。")]),s._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[s._v("mkdir -p //etc/vsftpd/vsftpd_user_conf\n")])])]),e("p",[s._v("（八）、以下分别为虚拟用户zhang，wang创建配置文件，同时创建私有的虚拟目录。")]),s._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[s._v("[root@localhost ~]# vim /etc/vsftpd/vsftpd_user_conf/zhang \nlocal_root=/home/ftpuser/zhang\nwrite_enable=YES\nanon_world_readable_only=YES\nanon_upload_enable=YES\nanon_mkdir_write_enable=YES\nanon_other_write_enable=YES\n\n[root@localhost ~]# vim /etc/vsftpd/vsftpd_user_conf/wang \nlocal_root=/home/ftpuser/wang\nwrite_enable=YES\nanon_world_readable_only=YES\nanon_upload_enable=YES\nanon_mkdir_write_enable=YES\nanon_other_write_enable=YES\n\n注释详解：\nlocal_root=/home/ftpuser/zhang # zhang虚拟用户配置文件的路径\nwrite_enable=YES               # 允许登陆用户有写权限\nanon_world_readable_only=YES   # 允许匿名用户下载，然后读取文件\nanon_upload_enable=YES         # 允许匿名用户上传文件权限，只有在write_enable=YES生效\nanon_mkdir_write_enable=YES    # 允许匿名用户创建目录，只有在write_enable=YES时该参数生效\nanon_other_write_enable=YES    # 允许匿名用户其他权限，例如删除、重命名等\n")])])]),e("p",[s._v("（九）、创建虚拟用户各自虚拟目录。")]),s._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[s._v("mkdir -p /home/ftpuser/{zhang,zhang};chown -R ftpuser:ftpuser /home/ftpuser/\n")])])]),e("p",[s._v("（十）、重启vsftpd服务，通过Windows客户端资源管理器访问Vsftpd服务器")])])}),[],!1,null,null,null);n.default=t.exports}}]);