(window.webpackJsonp=window.webpackJsonp||[]).push([[27],{377:function(t,v,s){"use strict";s.r(v);var _=s(43),e=Object(_.a)({},(function(){var t=this,v=t.$createElement,s=t._self._c||v;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"centos系统管理"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#centos系统管理"}},[t._v("#")]),t._v(" CentOS系统管理")]),t._v(" "),s("p",[t._v("Linux系统安装完毕，需要对Linux系统进行管理和维护，让Linux服务器能真正应用于企业中。")]),t._v(" "),s("p",[t._v("本章向读者介绍 Linux系统引导原理、启动流程、系统目录、权限、命令及CentOS7和CentOS6在系统管理、命令方面的区别等内容。")]),t._v(" "),s("h2",{attrs:{id:"操作系统启动概念"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#操作系统启动概念"}},[t._v("#")]),t._v(" 操作系统启动概念")]),t._v(" "),s("p",[t._v("不管是Windows还是Linux操作系统，底层设备一般均为物理硬件操作系统启动之前会对硬件进行检测，然后硬盘引导启动操作系统，以下为与操作系统启动相关的几个概念。")]),t._v(" "),s("ul",[s("li",[t._v("BIOS")])]),t._v(" "),s("p",[t._v("基本输人输出系统( basic input output system，BIOS)是一组固化到计算机主板上的只读内存镜像(read only memory image, ROM)芯片上的程序,它保存着计算机最重要的基本输入输出的程序、系统设置信息、开机后自检程序和系统自启动程序。主要功能是为计算机提供最底层的、最直接的硬件设置和控制。")]),t._v(" "),s("ul",[s("li",[t._v("MBR")])]),t._v(" "),s("p",[t._v("全新硬盘在使用之前必须进行分区格式化，硬盘分区初始化的格式主要有两种，分别为MBR格式和GPT格式。")]),t._v(" "),s("p",[t._v("如果使用MBR格式，操作系统将创建主引导记录扇区(master boot record,MBR)，MBR位于整块硬盘的0磁道0柱而1扇区，主要功能是操作系统对磁盘进行读写时，判断分区的合法性以及分区引导信息的定位。")]),t._v(" "),s("p",[t._v('主引导扇区总共为512字节,MBR只占用了其中的446个字节，另外的64个字节为硬盘分区表(disk partition table,DPT),最后两个字节"55,AA"是分区的结束标志。')]),t._v(" "),s("p",[t._v("在MBR硬盘中，硬盘分区信息直接存储于主引导记录（MBR）中，同事主引导记录还存储着系统的引导程序，如下表：\n"),s("table",[s("thead",[s("tr",[s("th",[t._v("0000-0088")]),t._v(" "),s("th",[t._v("Master Boot Record主引导程序")]),t._v(" "),s("th",[t._v("主引导程序")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("0089-01BD")]),t._v(" "),s("td",[t._v("出错信息数据区")]),t._v(" "),s("td",[t._v("数据区")])]),t._v(" "),s("tr",[s("td",[t._v("01BE-01CD")]),t._v(" "),s("td",[t._v("分区项1（16字节）")]),t._v(" "),s("td",{attrs:{rowspan:"4"}},[t._v("分区表")])]),t._v(" "),s("tr",[s("td",[t._v("01CE-01DD")]),t._v(" "),s("td",[t._v("分区项2（16字节）")])]),t._v(" "),s("tr",[s("td",[t._v("01DE-01ED")]),t._v(" "),s("td",[t._v("分区项3（16字节）")])]),t._v(" "),s("tr",[s("td",[t._v("01EE-01FD")]),t._v(" "),s("td",[t._v("分区项4（16字节）")])]),t._v(" "),s("tr",[s("td",[t._v("01FE")]),t._v(" "),s("td",[t._v("55")]),t._v(" "),s("td",{attrs:{rowspan:"2"}},[t._v("结束标志")])]),t._v(" "),s("tr",[s("td",[t._v("01FF")]),t._v(" "),s("td",[t._v("AA")])])])])]),t._v(" "),s("p",[t._v("MBR是计算机启动最先执行的硬盘上的程序，只有512字节大小，所以不能载人操作系统的核心，只能先载入一个可以载入计算机核心的程序，称为引导程序。")]),t._v(" "),s("p",[t._v("因为MBR分区标准决定了MBR只支持在2TB以下的硬盘，对于后面的多余空间只能浪费。为了支持能使用大于2TB硬盘空间，微软和英特尔公司在可扩展图件接口(extensible firmware iterface，EFl)方案中开发了全局唯一的标识符(globally unique identifier，GUID)，进面全面支持大于2TB硬盘空间在企业中使用。")]),t._v(" "),s("ul",[s("li",[t._v("GPT")])]),t._v(" "),s("p",[t._v("全局唯一的标识符（Globally Unique Identifier,GUID），正逐渐取代MBR成为新标准。它和统一的可扩展国件接口（Unified Extensible Firmware Interface，UEFI）相辅相成，UEFI用于取代老旧的BIOS，而GPT则取代老旧的MBR，之所以称为“GUID分区表”，是因为驱动器上的每个分区都有一个全局唯一的标识符。")]),t._v(" "),s("p",[t._v("在GPT硬盘中，分区表的位置信息储存在GPT头中。出于兼容性考虑，第一个扇区同样有一个与MBR类似的标记，叫作受保护的主引导记录(protected main boot reord，PMBR)。")]),t._v(" "),s("p",[t._v("PMBR的作用是当使用不支持GPT的分区工具时，整个硬盘将显示为一个受保护的分区，以防止分区表及硬盘数据遭到破坏，而其中存储的内容和MBR一样，之后才是GPT头。")]),t._v(" "),s("p",[t._v("GPT 优点支持2TB以上磁盘，如果使用Fdisk分区，最大只能建立2TB大小的分区，创建大于2TB的分区，需使用parted，同时必须使用64位操作系统,MAC、Linux系统都能支持GPT分区格式，Windows7/8 64位、Windows Server2008 64位支持GPT。GPT硬盘分区表内容如下图：")]),t._v(" "),s("img",{attrs:{src:t.$withBase("/linux_img/GPT.png"),alt:"GPT硬盘分区表"}}),t._v(" "),s("ul",[s("li",[t._v("GRUB")])]),t._v(" "),s("p",[t._v("GNU项目的多操作系统启动程序(GRand Unified Bootloader，GRUB).可以支持多操作系统的引导，它允许用户可以在计算机内同时拥有多个操作系统，并在计算机启动时选择希望运行的操作系统。")]),t._v(" "),s("p",[t._v("GRUB可用于选择操作系统分区上的不同内核，也可用于向这些内核传递启动参数。它是一个多重操作系统启动管理器。用来引导不同系统，如Windows、Linux。Linux常见的引导程序包括LILO、GRUB、GRUB2,CentOS 7 Linux默认使用GRUB2引导程序，引导系统启动。")]),t._v(" "),s("p",[t._v("GRUB2是基于GRUB开发成更加安全强大的多系统引导程序,最新Linux发行版都是使用GRUB2作为引导程序。同时GRUB2采用了模块化设计，使得GRUB2核心更加精炼,使用更加灵活，同时也就不需要像GRUB分为stage 1、stage 1.5、stage 2三个阶段。")]),t._v(" "),s("h2",{attrs:{id:"linux操作系统启动流程"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#linux操作系统启动流程"}},[t._v("#")]),t._v(" Linux操作系统启动流程")]),t._v(" "),s("p",[t._v("初学者对Linux操作系统启动流程深人理解，能有助于后期在企业中更好地维护Linux服务器，能够快速定位系统问题，进而解决问题。")]),t._v(" "),s("p",[s("strong",[t._v("1.加载BIOS")])]),t._v(" "),s("p",[t._v("计算机电源加电质检，首先加载基本输人输出系统(basic input output system，BIOS)，BIOS中包含硬件CPU、内存硬盘等相关信息，包含设备启动顺序信息，硬盘信息、内存信息、时钟信息，即插即用(Plug-and-Play,PNP)特性等。加载完B10S信息，计算机将根据顺序进行启动。")]),t._v(" "),s("p",[s("strong",[t._v("2.读取MBR")])]),t._v(" "),s("p",[t._v("读取完BIOS信息，计算机将会查找BIOS所指定的硬盘MBR引导扇区，将其内容复制到0x7c00地址所在的物理内存中。被复制到物理内存的内容是bootloader, 然后进行引导。")]),t._v(" "),s("p",[s("strong",[t._v("3. GRUB引导")])]),t._v(" "),s("p",[t._v("GRUB启动引导器是计算机启动过程中运行的第一个软件程序，当计算机读取内存中的GRUB配置信息后，会根据其配置信息来启动硬盘中不同的操作系统。")]),t._v(" "),s("p",[s("strong",[t._v("4.加载kernel")])]),t._v(" "),s("p",[t._v('计算机读取内存映像，并进行解压缩操作，屏幕一般会输出“Uncompressing Linux”的提示，当解压缩内核完成后，屏幕输出“OK，booting the kernel"。 系统将解压后的内核放置在内存之中，并调用start_kernel()函数来启动一系列的初始化函数并初始化各种设备，完成Linux核心环境的建立。')]),t._v(" "),s("p",[s("strong",[t._v("5.设定inittab运行等级")])]),t._v(" "),s("p",[t._v("内核加载完毕，会启动Linux操作系统第一个守护进程init，然后通过该进程读取/etc/inittab文件,/etc/inittab文件的作用是设定Linux的运行等级，Linux常见运行级别如下")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("运行级别")]),t._v(" "),s("th",[t._v("解释")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("0")]),t._v(" "),s("td",[t._v("关机模式")])]),t._v(" "),s("tr",[s("td",[t._v("1")]),t._v(" "),s("td",[t._v("单用户模式")])]),t._v(" "),s("tr",[s("td",[t._v("2")]),t._v(" "),s("td",[t._v("无网络支持的多用户模式")])]),t._v(" "),s("tr",[s("td",[t._v("3")]),t._v(" "),s("td",[t._v("字符界面多用户模式")])]),t._v(" "),s("tr",[s("td",[t._v("4")]),t._v(" "),s("td",[t._v("保留。未使用模式")])]),t._v(" "),s("tr",[s("td",[t._v("5")]),t._v(" "),s("td",[t._v("图像界面多用户模式")])]),t._v(" "),s("tr",[s("td",[t._v("6")]),t._v(" "),s("td",[t._v("重新引导系统，重启模式")])])])]),t._v(" "),s("p",[s("strong",[t._v("6. 加载rc. sysinit")])]),t._v(" "),s("p",[t._v("读取完运行级别，Linux系统执行的第一个用户层文件/etc/rc.d/rc.sysinit,该文件功能包括设定PATH运行变量、设定网络配置、启动swap分区、设定/proc、系统函数、配置SElinux等。")]),t._v(" "),s("p",[s("strong",[t._v("7.加载内核模块")])]),t._v(" "),s("p",[t._v("读取/etc/modules.conf文件及/etc/modules.d 目录下的文件来加载系统内核模块,该模块文件，可以后期添加或者修改及删除.")]),t._v(" "),s("p",[s("strong",[t._v("8.启动运行级别程序")])]),t._v(" "),s("p",[t._v("根据之前读取的运行级别，操作系统会运行rc0.d到rc6.d中的相应的脚本程序,来完成相应的初始化工作和启动相应的服务。其中以S开头表示系统即将启动的程序，如果以K开头、则代表停止该服务。S和K后紧跟的数字为启动顺序编号。")]),t._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("div",{staticClass:"highlight-lines"},[s("br"),s("br"),s("br"),s("br"),s("br"),s("br"),s("br"),s("br"),s("div",{staticClass:"highlighted"},[t._v(" ")]),s("br"),s("br"),s("br"),s("br"),s("br"),s("br"),s("br")]),s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("[root@centos7 etc]# ll |grep rc*.d\ngrep: rc1.d: Is a directory\ngrep: rc2.d: Is a directory\ngrep: rc3.d: Is a directory\ngrep: rc4.d: Is a directory\ngrep: rc5.d: Is a directory\ngrep: rc6.d: Is a directory\ngrep: rc.d: Is a directory\n\n[root@centos7 ~]# ll /etc/rc3.d/\ntotal 0\nlrwxrwxrwx. 1 root root 20 Oct 15  2017 K50netconsole -> ../init.d/netconsole\nlrwxrwxrwx. 1 root root 17 Oct 15  2017 S10network -> ../init.d/network\nlrwxrwxrwx  1 root root 17 Aug 10 00:03 S80aegis -> /etc/init.d/aegis\nlrwxrwxrwx  1 root root 20 Aug  9 14:02 S98agentwatch -> ../init.d/agentwatch\n")])]),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br"),s("span",{staticClass:"line-number"},[t._v("10")]),s("br"),s("span",{staticClass:"line-number"},[t._v("11")]),s("br"),s("span",{staticClass:"line-number"},[t._v("12")]),s("br"),s("span",{staticClass:"line-number"},[t._v("13")]),s("br"),s("span",{staticClass:"line-number"},[t._v("14")]),s("br"),s("span",{staticClass:"line-number"},[t._v("15")]),s("br")])]),s("p",[s("strong",[t._v("9.读取rc.local文件")])]),t._v(" "),s("p",[t._v("操作系统启动完相应服务之后，会读取执行/etc/rc.d/rc.local文件，可以将需要开机启动的任务加入到该文件末尾，系统会逐行去执行并启动相应命令。")]),t._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("[root@centos7 ~]# cat /etc/rc.d/rc.local    \n#!/bin/bash\n# THIS FILE IS ADDED FOR COMPATIBILITY PURPOSES\n#\n# It is highly advisable to create own systemd services or udev rules\n# to run scripts during boot instead of using this file.\n#\n# In contrast to previous versions due to parallel execution during boot\n# this script will NOT be run after all other services.\n#\n# Please note that you must run 'chmod +x /etc/rc.d/rc.local' to ensure\n# that this script will be executed during boot.\n\ntouch /var/lock/subsys/local\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br"),s("span",{staticClass:"line-number"},[t._v("10")]),s("br"),s("span",{staticClass:"line-number"},[t._v("11")]),s("br"),s("span",{staticClass:"line-number"},[t._v("12")]),s("br"),s("span",{staticClass:"line-number"},[t._v("13")]),s("br"),s("span",{staticClass:"line-number"},[t._v("14")]),s("br")])]),s("p",[s("strong",[t._v("10，执行/bin/login程序")]),t._v("\n执行/bin/login程序，启动到系统登录界面，操作系统等待用户输人用户名和密码，即可登承到shell终端（Linux操作系统），至此Linux操作系统完整流程启动完毕。")]),t._v(" "),s("h2",{attrs:{id:"centos-6与centos-7区别"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#centos-6与centos-7区别"}},[t._v("#")]),t._v(" CentOS 6与CentOS 7区别")]),t._v(" "),s("p",[t._v('CentOS 6默认采用sysvinit风格,sysvinit就是system V风格的init系统,sysvinit用术语runlevel 来定义“预订的运行模式”。sysvinit 检查“/etc/inittab"文件中是否含有"initdefault"项，该选项指定init的默认运行模式。sysvinit 使用脚本，文件命名规则和软链接来实现不同的runlevel,串行启动各个进程及服务。')]),t._v(" "),s("p",[t._v("CentOS7默认采用systemd风格,systemd是Linux系统中最新的初始化系统(init).它主要的设计目标是克服sysvinit固有的缺点，提高系统的启动速度。")]),t._v(" "),s("p",[t._v("systemd和Ubuntu的upstart是竞争对手，预计会取代upstart. systemd 的目标是尽可能启动更少的进程,尽可能将更多进程并行启动。下表是CentOS6与CentOS7提作系统的区别。")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("编号")]),t._v(" "),s("th",[t._v("系统功能")]),t._v(" "),s("th",[t._v("CentOS 6")]),t._v(" "),s("th",[t._v("CentOS 7")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("1")]),t._v(" "),s("td",[t._v("init系统")]),t._v(" "),s("td",[t._v("sysvinit")]),t._v(" "),s("td",[t._v("systemd")])]),t._v(" "),s("tr",[s("td",[t._v("2")]),t._v(" "),s("td",[t._v("桌面系统")]),t._v(" "),s("td",[t._v("GNOME 2. X")]),t._v(" "),s("td",[t._v("GNOME 3. X/GNOME shell")])]),t._v(" "),s("tr",[s("td",[t._v("3")]),t._v(" "),s("td",[t._v("文件系统")]),t._v(" "),s("td",[t._v("EXT4")]),t._v(" "),s("td",[t._v("XFS")])]),t._v(" "),s("tr",[s("td",[t._v("4")]),t._v(" "),s("td",[t._v("内核版本")]),t._v(" "),s("td",[t._v("2.6.X")]),t._v(" "),s("td",[t._v("3.10. X")])]),t._v(" "),s("tr",[s("td",[t._v("5")]),t._v(" "),s("td",[t._v("启动加载器")]),t._v(" "),s("td",[t._v("GRUB Legacy( + efibootmgr)")]),t._v(" "),s("td",[t._v("GRUB2")])]),t._v(" "),s("tr",[s("td",[t._v("6")]),t._v(" "),s("td",[t._v("防火墙")]),t._v(" "),s("td",[t._v("iptables")]),t._v(" "),s("td",[t._v("firewalld")])]),t._v(" "),s("tr",[s("td",[t._v("7")]),t._v(" "),s("td",[t._v("数据库")]),t._v(" "),s("td",[t._v("MySQL")]),t._v(" "),s("td",[t._v("MariaDB")])]),t._v(" "),s("tr",[s("td",[t._v("8")]),t._v(" "),s("td",[t._v("文件目录")]),t._v(" "),s("td",[t._v("/bin,/sbin,/lib,/lib64在/根下")]),t._v(" "),s("td",[t._v("/bin,/sbin,/lib,/lib64在/usr下")])]),t._v(" "),s("tr",[s("td",[t._v("9")]),t._v(" "),s("td",[t._v("主机名")]),t._v(" "),s("td",[t._v("/etc/sysconfig/network")]),t._v(" "),s("td",[t._v("/etc/hostname")])]),t._v(" "),s("tr",[s("td",[t._v("10")]),t._v(" "),s("td",[t._v("时间同步")]),t._v(" "),s("td",[t._v("ntp,ntpq -P")]),t._v(" "),s("td",[t._v("chrony，chronyc sources")])]),t._v(" "),s("tr",[s("td",[t._v("11")]),t._v(" "),s("td",[t._v("修改时间")]),t._v(" "),s("td",[t._v("# vi/ etc/sysconfig/clock "),s("br"),t._v('ZONE=”Asia/Tokyo" '),s("br"),t._v(" UTC= false  "),s("br"),t._v("#In-s  "),s("br"),t._v("/usr/share/zoneinfo/Asia/Tokyo "),s("br"),t._v("/etc/localtime")]),t._v(" "),s("td",[t._v("# timedatectl set-timezone Asia/Tokyo"),s("hr"),t._v("# timedatectl status")])]),t._v(" "),s("tr",[s("td",[t._v("12")]),t._v(" "),s("td",[t._v("区域及字符设置")]),t._v(" "),s("td",[t._v("/etc/sysconfig/i18n")]),t._v(" "),s("td",[t._v("/etc/locale.conf"),s("br"),t._v("localectl set-locale LANG=zh_CN.utf8"),s("br"),t._v("localectl status")])]),t._v(" "),s("tr",[s("td",[t._v("13")]),t._v(" "),s("td",[t._v("启动停止服务")]),t._v(" "),s("td",[t._v("# service service_name start"),s("br"),t._v("# service service_name stop"),s("hr"),t._v("# service sshd restart/status/reload")]),t._v(" "),s("td",[t._v("#systemctl start service_name"),s("br"),t._v("#systemctl stop service_name"),s("br"),t._v("#systemctl restart service_name")])]),t._v(" "),s("tr",[s("td",[t._v("14")]),t._v(" "),s("td",[t._v("自动启动")]),t._v(" "),s("td",[t._v("chkconfig service_neme on/off")]),t._v(" "),s("td",[t._v("systemctl enable service_name"),s("br"),t._v("systemctl disable service_name")])]),t._v(" "),s("tr",[s("td",[t._v("15")]),t._v(" "),s("td",[t._v("服务列表")]),t._v(" "),s("td",[t._v("chkconfig --list")]),t._v(" "),s("td",[t._v("# systemetl list-unit-files "),s("br"),t._v("# systemctl --type service")])]),t._v(" "),s("tr",[s("td",[t._v("16")]),t._v(" "),s("td",[t._v("Kill服务")]),t._v(" "),s("td",[t._v("kill -9 < PID>")]),t._v(" "),s("td",[t._v("systemctl kill --signal=9 sshd")])]),t._v(" "),s("tr",[s("td",[t._v("17")]),t._v(" "),s("td",[t._v("网络及端口信息")]),t._v(" "),s("td",[t._v("netstat")]),t._v(" "),s("td",[t._v("ss")])]),t._v(" "),s("tr",[s("td",[t._v("18")]),t._v(" "),s("td",[t._v("IP信息")]),t._v(" "),s("td",[t._v("ifconfig")]),t._v(" "),s("td",[t._v("ip address show")])]),t._v(" "),s("tr",[s("td",[t._v("19")]),t._v(" "),s("td",[t._v("路由信息")]),t._v(" "),s("td",[t._v("route -n")]),t._v(" "),s("td",[t._v("ip route show")])]),t._v(" "),s("tr",[s("td",[t._v("20")]),t._v(" "),s("td",[t._v("关闭停止系统")]),t._v(" "),s("td",[t._v("shutdown -h now")]),t._v(" "),s("td",[t._v("systemctl poweroff")])]),t._v(" "),s("tr",[s("td",[t._v("21")]),t._v(" "),s("td",[t._v("单用户模式")]),t._v(" "),s("td",[t._v("init S")]),t._v(" "),s("td",[t._v("systemctl rescue")])]),t._v(" "),s("tr",[s("td",[t._v("22")]),t._v(" "),s("td",[t._v("运行模式")]),t._v(" "),s("td",[t._v("vim/ etc/inittab"),s("br"),t._v("id:3:initdefault:")]),t._v(" "),s("td",[t._v("systemctl set-default multi-user.target"),s("hr"),t._v("systemctl set-deiault graphical.target")])])])]),t._v(" "),s("p",[t._v("Lnux操作系统文件系统类型主要有EXT3、EXT4,XFS等，其中CentOS 6普遍采用EXT3和EXT4文件系统格式，而CentOS7默认采用XFS格式。")]),t._v(" "),s("p",[s("strong",[t._v("以下为EXT3、EXT4、XFS的区别:")])]),t._v(" "),s("ul",[s("li",[s("p",[t._v("EXT4是第四代扩展文件系统(fourth extended filesystem,EXT4)是Linux系统下的日志文件系统,是EXT3文件系统的后继版本;")])]),t._v(" "),s("li",[s("p",[t._v("EXT3类型文件系统支持最大16TB文件系统和最大2TB文件;")])]),t._v(" "),s("li",[s("p",[t._v("EXT4分别支持1EB(1EB= 1024PB,1PB= 1024TB)的文件系统，以及16TB的单个文件;")])]),t._v(" "),s("li",[s("p",[t._v("EXT3只支持32000个子目录，而EXT4支持无限数量的子目录;")])]),t._v(" "),s("li",[s("p",[t._v("EXT4磁盘结构的inode个数支持40亿，而且EXT4的单个文件大小支持到16TB;")])]),t._v(" "),s("li",[s("p",[t._v("XFS是一个64位文件系统，最大支持8EB减1字节的单个文件系统,实际部署时取决于宿主操作系统的最大块限制，常用于64位操作系统，发挥更好的性能;")])]),t._v(" "),s("li",[s("p",[t._v("XFS一种高性能的日志文件系统，最早于1993 年，由Silicon Graphics为他们的IRIX操作系统而开发，是IRIX 5.3版的默认文件系统;")])]),t._v(" "),s("li",[s("p",[t._v("XFS于2000年5月,Silicon Graphics 以GPL发布这套系统的源代码，之后被移植到Linux内核上，XFS特别擅长处理大文件,同时提供平滑的数据传输。")])])]),t._v(" "),s("h2",{attrs:{id:"tcp-ip协议概述"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#tcp-ip协议概述"}},[t._v("#")]),t._v(" TCP/IP协议概述")]),t._v(" "),s("p",[t._v("要学好Linux,对网络协议也要有充分的了解和掌握，例如传输控制协议/因特网互联协议(Transmission Control Protocol/Internet Protocol,TCP/IP)，TCP/IP名为网络通信地议，是Internet最基本的协议.Internet国际互联网络的基础，由网络层的IP协议和传输层的TCP协议组成。")]),t._v(" "),s("p",[t._v("TCP/IP定义了电子设备如何连入因特网，以及数据如何在它们之间传输的标准，协议采用了4层的层级结构,每一层都呼叫它的下一层所提供的协议来完成自己的需求。")]),t._v(" "),s("p",[t._v("TCP负责发现传输的问题，一旦有问题就发出信号，要求重新传输，直到所有数据安全正确地传输到目的地，而IP是给因特网的每台联网设备规定一个地址。")]),t._v(" "),s("p",[t._v("基于TCP/IP的参考模型将协议分成4个层次，分别是网络接口层、网际互联层(IP层)、传输层(TCP层)和应用层。")]),t._v(" "),s("p",[s("strong",[t._v("如下：所示为OSI和TCP/IP参考模型层次的对比。")])]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("OSL模型")]),t._v(" "),s("th"),t._v(" "),s("th",[t._v("TCP/IP模型")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("应用层")]),t._v(" "),s("td",{attrs:{rowspan:"3"}},[t._v("→")]),t._v(" "),s("td",{attrs:{rowspan:"3"}},[t._v("应用层")])]),t._v(" "),s("tr",[s("td",[t._v("表示层")])]),t._v(" "),s("tr",[s("td",[t._v("会话层")])]),t._v(" "),s("tr",[s("td",[t._v("传输层")]),t._v(" "),s("td",[t._v("→")]),t._v(" "),s("td",[t._v("传输层")])]),t._v(" "),s("tr",[s("td",[t._v("网络层")]),t._v(" "),s("td",[t._v("→")]),t._v(" "),s("td",[t._v("网际互联层")])]),t._v(" "),s("tr",[s("td",[t._v("数据链层")]),t._v(" "),s("td",{attrs:{rowspan:"2"}},[t._v("→")]),t._v(" "),s("td",{attrs:{rowspan:"2"}},[t._v("网络接口层")])]),t._v(" "),s("tr",[s("td",[t._v("物理层")])])])]),t._v(" "),s("p",[s("strong",[t._v("如下：所示为OSI模型与TCP/IP模型协议功能实现对照表")])]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("OSL模型")]),t._v(" "),s("th",[t._v("对应的网络协议")]),t._v(" "),s("th",[t._v("每层功能")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("应用层")]),t._v(" "),s("td",[t._v("HTTP、TFTP、SNMP、DNS、FTP、SMTP、Telnet")]),t._v(" "),s("td",[t._v("文件传输、电子邮件、文件服务、虚拟终端")])]),t._v(" "),s("tr",[s("td",[t._v("表示层")]),t._v(" "),s("td",[t._v("没有协议")]),t._v(" "),s("td",[t._v("数据格式化、代码转换、数据加密")])]),t._v(" "),s("tr",[s("td",[t._v("会话层")]),t._v(" "),s("td",[t._v("没有协议")]),t._v(" "),s("td",[t._v("解除或建立与别的接点的联系")])]),t._v(" "),s("tr",[s("td",[t._v("传输层")]),t._v(" "),s("td",[t._v("TCP、UDP")]),t._v(" "),s("td",[t._v("提供端对端的接口")])]),t._v(" "),s("tr",[s("td",[t._v("网络层")]),t._v(" "),s("td",[t._v("IP、ICMP、OSPF、BGP、IGMP、ARP、RARP")]),t._v(" "),s("td",[t._v("对数据包选择路由")])]),t._v(" "),s("tr",[s("td",[t._v("数据链层")]),t._v(" "),s("td",[t._v("SLIP、PPP、MTU")]),t._v(" "),s("td",[t._v("传输有地址的帧以及错误检测功能")])]),t._v(" "),s("tr",[s("td",[t._v("物理层")]),t._v(" "),s("td",[t._v("ISO 2110、IEEE 802、IEEE 802.2")]),t._v(" "),s("td",[t._v("以二进制数据形式在物理媒体上传输数据")])])])]),t._v(" "),s("h2",{attrs:{id:"ip地址及网络常识"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#ip地址及网络常识"}},[t._v("#")]),t._v(" IP地址及网络常识")]),t._v(" "),s("p",[t._v("互联网协议地址(Internet Protocol address,IP),IP地址是IP协议提供的一种统的地址格式，它为互联网上的每一个网络和每一台主机分配个逻辑地址，以此来屏蔽物理地址的差异。IP地址给Internet上的每个通信设备分配一个编号，每台联网的PC上都需要有IP地址，这样才能正常通信。")]),t._v(" "),s("p",[t._v('IP地址是一个32位的二进制数,通常被分割为4个8位二进制数(即4个字节)。IP地址通常用点分十进制表示成"a、b、c、d"的形式,其中,a、b、c、d都是0~255之间的十进制整数。')]),t._v(" "),s("p",[t._v("常见的IP地址分为IPv4与IPv6两大类。IP地址编址方案将IP地址空间划分为A、B、C、D、E五类，其中A、B、C是基本类,D、E类作为多播和保留使用。")]),t._v(" "),s("p",[t._v("IPv4有4段数字，每一段最大不超过255。由于互联网的蓬勃发展，IP位址的需求量越来越大，使得IP位址的发放愈趋严格，各项资料显示，全球IPv4位址在2011年已经全部分发完毕。")]),t._v(" "),s("p",[t._v("地址空间的不足必将妨碍互联网的进一步发展。 为了扩大地址空间,拟通过IPv6重新定义地址空间。IPv6 采用128位地址长度。在IPv6的设计过程中除了一劳永逸地解决了地址短缺问题以外,IPv6的诞生可以给全球每一粒沙子配置一个IP地址，还考虑了在IPv4中解决不好的其他问题，如图3-8所示。")]),t._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("div",{staticClass:"highlight-lines"},[s("br"),s("br"),s("div",{staticClass:"highlighted"},[t._v(" ")]),s("br"),s("div",{staticClass:"highlighted"},[t._v(" ")]),s("br"),s("br")]),s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("2: eno1: <BROADCAST,MULTICAST,UP,LOWER_UP> mtu 1500 qdisc pfifo_fast state UP group default qlen 1000\n    link/ether 30:9c:23:59:e0:66 brd ff:ff:ff:ff:ff:ff\n    inet 192.168.0.113/24 brd 192.168.0.255 scope global noprefixroute eno1\n       valid_lft forever preferred_lft forever\n    inet6 fe80::b2cd:71eb:9f8d:2900/64 scope link noprefixroute \n       valid_lft forever preferred_lft forever\n")])]),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br")])]),s("h3",{attrs:{id:"ip地址分类"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#ip地址分类"}},[t._v("#")]),t._v(" IP地址分类")]),t._v(" "),s("p",[t._v("IPv4地址编址方案有A、B、C、D、E五类，其中A、B、C是基本类，D、E类作为多播和保留使用，各分类详解如下。")]),t._v(" "),s("ul",[s("li",[s("strong",[t._v("A类IP地址")])])]),t._v(" "),s("p",[t._v("一个A类IP地址是指，在IP地址的四段号码中，第一段号码为网络号码，剩下的三段号码为本地计算机的号码。如果用二进制表示IP地址的话，A类IP地址就由1字节的网络地址和3字节主机地址组成，网络地址的最高位必须是0。A类IP地址中网络的标识长度为8位，主机标识的长度为24位,A类网络地址数量较少，有126个网络，每个网络可以容纳主机数可达到1600万台。")]),t._v(" "),s("p",[t._v("A类IP地址范围为1.0.0.0~127.255.255.255 (二进制表示为00000001 00000000 00000000 00000000 ~ 01111111 11111111 11111111 11111111),最后一个为广播地址。")]),t._v(" "),s("p",[t._v("A类IP地址的子网掩码为255.0.0.0，每个网络之持的单大主机数256的3次方-2=16777214台。")]),t._v(" "),s("ul",[s("li",[s("strong",[t._v("B类IP地址")])])]),t._v(" "),s("p",[t._v("一个B类IP地址是指，在IP地址的四段号码中，前两段号码为网络号码。如果用二进制表示IP地址的话，B类IP地址就由2字节的网络地址和2字节主机地址组成，网络地址的最高位必须是“10”。B类IP地址中网络的标识长度为16位，主机标识的长度为16位，B类网络地址适用于中等规模的网络，有16384个网络，每个网络所能容纳的计算机数为6万多台。")]),t._v(" "),s("p",[t._v("B类IP地址范围为128.0.0.0~ 191.255.255.255(二进制表示为 10000000 00000000 00000000 00000000~ 10111111 11111111 11111111 11111111)最后一个是广播地址。")]),t._v(" "),s("p",[t._v("B类IP地址的子网掩码为255.255.0.0,，每个网络支持的最大主机数为256的2次方-2=65534台。")]),t._v(" "),s("ul",[s("li",[s("strong",[t._v("C类IP地址")])])]),t._v(" "),s("p",[t._v("一个C类IP地址是指，在IP地址的四段号码中，前三段号码为网络号码，剩下的一段号码为本地计算机的号码。如果用二进制表示IP地址的话，C类IP地址就由3字节的网络地址和1字节主机地址组成，网络地址的最高位必须是“110”。C类IP地址中网络的标识长度为24位，主机标识的长度为8位，C类网络地址数量较多，有209万余个网络。适用于小规模的局域网络，每个网络最多只能包含254台计算机。")]),t._v(" "),s("p",[t._v("C类IP地址范围192.0.0.0-223.255.255.255 [3]  （二进制表示为: 11000000 00000000 00000000 00000000 - 11011111 11111111 11111111 11111111）。")]),t._v(" "),s("p",[t._v("C类IP地址的子网掩码为255.255.255.0，每个网络支持的最大主机数为256-2=254台。")]),t._v(" "),s("ul",[s("li",[s("strong",[t._v("D类IP地址")])])]),t._v(" "),s("p",[t._v("D类IP地址在历史上被叫做多播地址(multicast address)，即组播地址。在以太网中，多播地址命名了一组应该在这个网络中应用接收到一个分组的站点。多播地址的最高位必须是“1110”，范围从224.0.0.0到239.255.255.255。")]),t._v(" "),s("ul",[s("li",[s("strong",[t._v("特殊的网址")])])]),t._v(" "),s("ol",[s("li",[t._v("每一个字节都为0的地址（“0.0.0.0”）对应于当前主机；")]),t._v(" "),s("li",[t._v("IP地址中的每一个字节都为1的IP地址（“255．255．255．255”）是当前子网的广播地址；")]),t._v(" "),s("li",[t._v("IP地址中凡是以“11110”开头的E类IP地址都保留用于将来和实验使用。")]),t._v(" "),s("li",[t._v("IP地址中不能以十进制“127”作为开头，该类地址中数字127．0．0．1到127．255．255．255用于回路测试，如：127.0.0.1可以代表本机IP地址，用“http://127.0.0.1”就可以测试本机中配置的Web服务器。")]),t._v(" "),s("li",[t._v("网络ID的第一个8位组也不能全置为“0”，全“0”表示本地网络。")])]),t._v(" "),s("h3",{attrs:{id:"子网掩码"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#子网掩码"}},[t._v("#")]),t._v(" 子网掩码")]),t._v(" "),s("p",[t._v("子网掩码(subnet mask)又叫网络掩码、地址掩码、子网络遮罩，它是一种用来指明一个IP地址的哪些位标识的是主机所在的子网，以及哪些位标识的是主机的位掩码。子网掩码不能单独存在，它必须结合IP地址一起使用。子网掩码只有一个作用，就是将某个IP地址划分成网络地址和主机地址两部分。")]),t._v(" "),s("p",[t._v("子网掩码是一个32位地址，用于屏蔽IP地址的一部分以区别网络标识和主机标识，并说明该IP地址是在局域网上，还是在远程网上。")]),t._v(" "),s("p",[t._v("对于A类地址，默认的子网掩码是255.0.0.0，面对于B类地址来说默认的子网掩码是255.255.0.0，对于C类地址来说默认的子网掩码是255.255.255.0。")]),t._v(" "),s("p",[t._v("互联网是由各种小型网络构成的，每个网络上都有许多主机。这样便构成了一个有层次的结构。IP地址在设计时就考虑到地址分配的层次特点。将每个IP地址部分制成网络号和主机号两部分，以便于IP地址的寻址操作。")]),t._v(" "),s("p",[t._v("子网掩码的设定必须遵循一定的规则。 与二进制IP地址相同，子网掩码由1和0组成，且1和0分别连续。子网掩码的长度也是32位，左边是网络位，用二进制数字1表示，1的数目等于网络位的长度；右边是主机位，用二进制数字0表示.0的数目等于主机位的长度。")]),t._v(" "),s("h3",{attrs:{id:"网关地址"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#网关地址"}},[t._v("#")]),t._v(" 网关地址")]),t._v(" "),s("p",[t._v("网关(gateway)是个网络连接到另个网络的“关口” ,网关实质上是一个网络通向其他网络的IP地址。主要用于不同网络间传输数据。")]),t._v(" "),s("p",[t._v("例如电脑设备上网，如果是接入到同一个交换机，在交换机内部传输数据是不需要经过网关的，但是如果两台设备不在一个交换机网络，则需要在本机配置网关，内网主机的数据通过网关，网关把数据转发到其他的网络的网关，直至找到对方的主机网络，然后返回数据。")]),t._v(" "),s("h3",{attrs:{id:"mac地址"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#mac地址"}},[t._v("#")]),t._v(" MAC地址")]),t._v(" "),s("p",[t._v("媒体访问控制(Media Access Control或者Medium Access Control，MAC)是物理地址、硬件地址,用来定义网络设备的位置。")]),t._v(" "),s("p",[t._v("在OSI模型中，第三层网络层负责 IP地址，第二层数据链路层则负责 MAC地址。因此一个主机会有一个MAC地址，而每个网络位置会有一个专属于它的IP地址。")]),t._v(" "),s("p",[t._v("IP地址工作在OSL参考模型的第三层网络层。两者之间分工明确，默契合作，完成通信过程。IP 地址专注于网络层，将数据包从一个网络转发到另外一个网络;而MAC地址则专注于数据链路层。将一个数据帧从一个节点传送到相同链路的另一个节点。")]),t._v(" "),s("p",[t._v("P地址和MAC地址一般是成对出现的。 如果一台计算机要和网络中另一台计算机通信，那么这两台设备必须配置IP地址和MAC地址，而MAC地址是网卡出厂时设定的，这样配置的IP地址就和MAC地址形成了一种对应关系。")]),t._v(" "),s("p",[t._v("在数据通信时,IP地址负责表示计算机的刚络层地址，网络层设备(如路由器)根据IP地址来进行操作；MAC地址负责表示计算机的数据链路层地址，数据链路层设备，根据MAC地址来进行操作。IP地址和MAC地址这种映射关系是通过地址解析协议（Address Resolution Protocol，ARP）来实现的。")]),t._v(" "),s("h2",{attrs:{id:"linux系统配置ip"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#linux系统配置ip"}},[t._v("#")]),t._v(" Linux系统配置IP")]),t._v(" "),s("p",[t._v("Linux操作系统安装完毕,那接下来如何让Linux操作系统能上:外网呢?以下为服务器配置IP的方法。")]),t._v(" "),s("p",[t._v("Linux服务器网卡默认配置文件在"),s("code",[t._v("/etc/sysconfig/network-scripts/")]),t._v("下，命名的名称般为ifcfg-eth0,ifcfg-eth1,eth0表示第一块网卡，eth1表示第二块网卡，以此类推，例如DELLR720标配有4块千兆网卡，在系统显示的名称依次为ethO、ethl、eth2、eth3。")]),t._v(" "),s("p",[t._v("修改服务器网卡IP地址命令为"),s("code",[t._v("vim /etc/sysconfig/network-scripts/ifcfg-eth0")]),t._v("(注CentOS7网卡名为ifcfg-eno16777736)。")]),t._v(" "),s("p",[t._v("vim编辑网卡配置文件，默认为DHCP方式，配置如下:")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[t._v("DEVICE=ens33              #网卡名称\nBOOTPROTO=dhcp            #自动获取IP[none|static|bootp|dhcp](不使用协议|静态分配|BOOTP协议|DHCP协议)\nHWADDR=00:0c:29:52:c7:4e  #以太网设备的硬件地址\nONBOOT=yes                #开机启动（是否激活网卡设备）\nTYPE=Ethernet             #网卡类型      \n")])])]),s("p",[t._v("vim编辑网卡配置文件，修改BOOTPROTO为DHCP方式，同时添加IPADDR、NETMASK、GATEWAY信息如下:")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[t._v("DEVICE=ens33              #网卡名称\nBOOTPROTO=static          #静态IP[none|static|bootp|dhcp](不使用协议|静态分配|BOOTP协议|DHCP协议)\nHWADDR=00:0c:29:52:c7:4e  #以太网设备的硬件地址\nONBOOT=yes                #开机启动（是否激活网卡设备）\nTYPE=Ethernet             #网卡类型   \nIPADDR=192.168.1.103      #IP地址\nNETMASK=255.255.255.0     #子网掩码\nGATEWAY=192.168.1.1       #网关地址\n")])])]),s("p",[t._v("服务器网卡配置完毕后，重启网卡服务/etc/init.d/network restart 即可，然后查看IP地址；命令ifconfig或者ip addr show 查看当前服务器所有网卡的IP地址。")]),t._v(" "),s("p",[t._v("CentOS 7 Linux中，如果没有ifconfig命令，可以用ip addr list/show 查看，也可以安装ifconfig命令，需安装软件包net-tools，命令如下，")]),t._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("yum install net-tools -y\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br")])]),s("h2",{attrs:{id:"linux系统配置dns"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#linux系统配置dns"}},[t._v("#")]),t._v(" Linux系统配置DNS")]),t._v(" "),s("p",[t._v("网卡IP地址配置完毕后，如果服务器需要上外网，还需要配置域名解析地址（Domain Name System，DNS），DNS主要用于将请求的域名转换为IP地址，DNS地址配置方法如下：")]),t._v(" "),s("p",[t._v("修改"),s("code",[t._v("vim /etc/resolv.conf")]),t._v(" 文件，加入两行代码：")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[t._v("nameserver 202.106.0.20\nnameserver 8.8.8.8\n")])])]),s("p",[t._v("上述语句分别表示主DNS与备DNS，DNS配置完毕后，无需重启网络服务，DNS立即生效。用户可以用以下命令查看返回结果，如果有IP返回，则表示服务器DNS配置正确。")]),t._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("[root@centos7 ~]# ping -c 6 www.baidu.com\nPING www.a.shifen.com (220.181.112.244) 56(84) bytes of data.\n64 bytes from 220.181.112.244 (220.181.112.244): icmp_seq=1 ttl=53 time=4.30 ms\n64 bytes from 220.181.112.244 (220.181.112.244): icmp_seq=2 ttl=53 time=4.25 ms\n64 bytes from 220.181.112.244 (220.181.112.244): icmp_seq=3 ttl=53 time=4.33 ms\n^C\n--- www.a.shifen.com ping statistics ---\n3 packets transmitted, 3 received, 0% packet loss, time 2002ms\nrtt min/avg/max/mdev = 4.256/4.298/4.332/0.082 ms\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br")])]),s("h2",{attrs:{id:"linux网卡名称命名"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#linux网卡名称命名"}},[t._v("#")]),t._v(" Linux网卡名称命名")]),t._v(" "),s("p",[t._v("Linux 操作系统的网卡设备的传统命名方式是 eth0、eth1、eth2等，而 CentOS7 提供了不同的命名规则，默认是基于固件、拓扑、位置信息来分配。这样做的优点是命名全自动的、可预知的，缺点是比 eth0、wlan0 更难读，比如 ens33。")]),t._v(" "),s("h3",{attrs:{id:"命名规则策略"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#命名规则策略"}},[t._v("#")]),t._v(" 命名规则策略")]),t._v(" "),s("p",[t._v("规则1：\n对于板载设备命名合并固件或 BIOS 提供的索引号，如果来自固件或 BIOS 的信息可读就命名，比如eno1，这种命名是比较常见的，否则使用规则2。")]),t._v(" "),s("p",[t._v("规则2：\n命名合并固件或 BIOS 提供的 PCI-E 热插拔口索引号，比如 ens1，如果信息可读就使用，否则使用规则3。")]),t._v(" "),s("p",[t._v("规则3：\n命名合并硬件接口的物理位置，比如 enp2s0，可用就命名，失败直接到方案5。")]),t._v(" "),s("p",[t._v("规则4：\n命名合并接口的 MAC 地址，比如 enx78e7d1ea46da，默认不使用，除非用户选择使用此方案。")]),t._v(" "),s("p",[t._v("规则5：\n使用传统的方案，如果所有的方案都失败，使用类似 eth0 这样的样式。")]),t._v(" "),s("h3",{attrs:{id:"网卡名称字符含义"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#网卡名称字符含义"}},[t._v("#")]),t._v(" 网卡名称字符含义")]),t._v(" "),s("p",[t._v("1、前2个字符的含义")]),t._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("en　　以太网　　　　Ethernet\nwl　　无线局域网　　WLAN\nww　  无线广域网　　WWAN\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br")])]),s("p",[t._v("2、第3个字符根据设备类型选择")]),t._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("o<index>           on-board device index number\ns<slot>            hotplug slot index number\nx<MAC>             MAC address\np<bus>s<slot>      PCI geographical location\np<bus>s<slot>      USB port number chain\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br")])]),s("h3",{attrs:{id:"修改网卡名称样式为ethx"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#修改网卡名称样式为ethx"}},[t._v("#")]),t._v(" 修改网卡名称样式为ethx")]),t._v(" "),s("p",[t._v("1 .编辑 grub 配置文件")]),t._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v('[root@centos7 ~]# vim /etc/sysconfig/grub  # 其实是/etc/default/grub的软连接\n# 为GRUB_CMDLINE_LINUX变量增加2个参数，具体内容 net.ifnames=0 biosdevname=0 \nGRUB_CMDLINE_LINUX="crashkernel=auto rd.lvm.lv=centos/root rd.lvm.lv=centos/swap net.ifnames=0 biosdevname=0 rhgb quiet"\n')])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br")])]),s("blockquote",[s("p",[t._v("引号内顺序无影响 注意各参数间空格。")])]),t._v(" "),s("p",[t._v("2 .重新生成 grub 配置文件")]),t._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("[root@centos7 ~]# grub2-mkconfig -o /boot/grub2/grub.cfg\nGenerating grub configuration file ...\nFound linux image: /boot/vmlinuz-3.10.0-693.el7.x86_64\nFound initrd image: /boot/initramfs-3.10.0-693.el7.x86_64.img\nFound linux image: /boot/vmlinuz-0-rescue-3cb573f18d5442d9a230948907ae41bc\nFound initrd image: /boot/initramfs-0-rescue-3cb573f18d5442d9a230948907ae41bc.img\ndone\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br")])]),s("blockquote",[s("p",[t._v("然后重新启动 Linux 操作系统，通过 ip addr 可以看到网卡名称已经变为 eth0 。")])]),t._v(" "),s("p",[t._v("3 .修改网卡配置文件")]),t._v(" "),s("blockquote",[s("p",[t._v("原来网卡配置文件名称为 "),s("code",[t._v("ifcfg-ens33")]),t._v("，这里需要修改为 "),s("code",[t._v("ethx")]),t._v(" 的格式，并适当调整网卡配置文件。")])]),t._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("[root@centos7 ~]# mv /etc/sysconfig/network-scripts/ifcfg-ens33 /etc/sysconfig/network-scripts/ifcfg-eth0\n# 修改ifcfg-eth0文件如下内容(其它内容不变)\nNAME=eth0\nDEVICE=eth0\n[root@centos7 ~]# systemctl restart network.service    # 重启网络服务\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br")])]),s("h2",{attrs:{id:"centos-7密码重置"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#centos-7密码重置"}},[t._v("#")]),t._v(" CentOS 7密码重置")]),t._v(" "),s("p",[t._v("修改CentOS 7 root密码非常简单，只需登录系统，执行命令"),s("code",[t._v("passwd")]),t._v("按Enter键即可，但是如果忘记root密码，无法登陆系统，该如何去重置root用户的密码呢？以下为重置root用户密码的方法。")]),t._v(" "),s("p",[s("strong",[t._v("（一）Reboot 重启系统，系统启动进入欢迎界面，加载内核步骤时，按E键，然后选中CentOS Linux（内核版本号）7（Core）")])]),t._v(" "),s("img",{attrs:{src:t.$withBase("/modify/1.png"),alt:"Reboot重启系统"}}),t._v(" "),s("p",[s("strong",[t._v("（二）继续按E键进入编辑模式，找到ro crashkernel=auto xxx项，将ro改成"),s("code",[t._v("rw init=/sysroot/bin/sh")])])]),t._v(" "),s("img",{attrs:{src:t.$withBase("/modify/2.png"),alt:"修改ro"}}),t._v(" "),s("p",[s("strong",[t._v("（三）修改后")])]),t._v(" "),s("img",{attrs:{src:t.$withBase("/modify/3.png"),alt:"修改后"}}),t._v(" "),s("p",[s("strong",[t._v("（四）按Ctrl+X键进入单用户模式")])]),t._v(" "),s("img",{attrs:{src:t.$withBase("/modify/4.png"),alt:"按Ctrl+X键进入单用户模式"}}),t._v(" "),s("p",[s("strong",[t._v("（五）执行命令 chroot /sysroot 访问系统，并使用passwd 修改root密码。")])]),t._v(" "),s("img",{attrs:{src:t.$withBase("/modify/5.png"),alt:"执行命令 chroot /sysroot "}}),t._v(" "),s("p",[s("strong",[t._v("（六）更新系统信息 执行"),s("code",[t._v("touch /.aoturelabel")]),t._v(" ,在根目录下创建一个.aoturelabel文件，如果该文件存在，系统再重启时就会对整个文件系统进行relabeling重新标记，可以理解为对文件进行底层权限的控制和标记，如果SElinux属于disabled关闭状态则不需要执行这条命令, 最后重启服务器即可完成修改密码")])]),t._v(" "),s("img",{attrs:{src:t.$withBase("/modify/6.png"),alt:"更新系统信息"}}),t._v(" "),s("h2",{attrs:{id:"远程管理linux服务器"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#远程管理linux服务器"}},[t._v("#")]),t._v(" 远程管理Linux服务器")]),t._v(" "),s("p",[t._v("Linux系统安装完毕后，可以通过远程工具来连接到Linux服务器，远程连接服务器管理的好处在于可以跨地区管理服务器，例如用户在北京，想管理的服务器在上海某IDC机房，通过远程管理,不需要到IDC机房现场去操作，直接通过远程工具即可管理服务器。")]),t._v(" "),s("p",[t._v("远程管理Linux服务器需要满足以下三个步骤:")]),t._v(" "),s("ol",[s("li",[s("p",[t._v("服务器配置IP地址，如果服务器在公网，需配置公网IP,如果服务器在内部局域网，可以直接配置内部私有IP即可。")])]),t._v(" "),s("li",[s("p",[t._v("服务器安装SSHD软件服务并启动该服务，几乎所有的Linux服务器系统安装完毕均会自动安装并启动SSHD服务,SSHD服务监听22端口。")])]),t._v(" "),s("li",[s("p",[t._v("在服务器中防火墙服务需要允许22端口对外开放，初学者可以临时关闭防火墙，CentOS 6 Linux关闭防火墙的命令为"),s("code",[t._v("service iptables stop")]),t._v(",而CentOS 7 Linux关闭防火墙的命令为"),s("code",[t._v("systemctl stop firewalld.service")]),t._v("。")])])]),t._v(" "),s("p",[t._v("常见的Linux远程管理工具包括SecureCRT、Xshell、Putty、Xmanger等工具。目前主流的远程管理Linux服务器工具为"),s("a",{attrs:{href:"https://www.vandyke.com",target:"_blank",rel:"noopener noreferrer"}},[t._v("SecureCRT官网"),s("OutboundLink")],1)]),t._v(" "),s("h2",{attrs:{id:"linux系统目录及功能"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#linux系统目录及功能"}},[t._v("#")]),t._v(" Linux系统目录及功能")]),t._v(" "),s("p",[t._v("通过以上知识的学习，因该能独立安装和配置Linux服务器IP并实现远程连接，为了进一步学习Linux，需要掌握对Linux系统各个目录的功能。")]),t._v(" "),s("p",[t._v("linux目录结构表")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("目录")]),t._v(" "),s("th",[t._v("描述")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("/")]),t._v(" "),s("td",[t._v("只有一个跟 \\ ；不是一 一对应的;第一层次结构的根、整个文件系统层次结构的根目录。")])]),t._v(" "),s("tr",[s("td",[t._v("/bin")]),t._v(" "),s("td",[t._v("用户二进制文件；包含二进制可执行文件。在单用户模式下，你需要使用的常见Linux命令都位于此目录下。系统的所有用户使用的命令都设在这里。例如：ls、ping、grep、cp等")])]),t._v(" "),s("tr",[s("td",[t._v("/sbin")]),t._v(" "),s("td",[t._v("系统二进制文件；就像/bin，/sbin同样也包含二进制可执行文件。但是，在这个目录下的linux命令通常由系统管理员使用，对系统进行维护。例如：ifconfig命令")])]),t._v(" "),s("tr",[s("td",[t._v("/boot")]),t._v(" "),s("td",[t._v("引导加载程序相关的文件。 内核的initrd、vmlinux、grub文件位于/boot下。例如：initrd.img-2.6.32-24-generic、vmlinuz-2.6.32-24-generic")])]),t._v(" "),s("tr",[s("td",[t._v("/dev")]),t._v(" "),s("td",[t._v("设备文件；这些包括终端设备、USB或连接到系统的任何设备。例如：/dev/tty1、/dev/usbmon0")])]),t._v(" "),s("tr",[s("td",[t._v("/etc")]),t._v(" "),s("td",[t._v("配置文件；包含所有程序所需的配置文件。也包含了用于启动/停止单个程序的启动和关闭shell脚本。例如：/etc/passwd、/etc/shadow")])]),t._v(" "),s("tr",[s("td",[t._v("/home")]),t._v(" "),s("td",[t._v("所有用户用home目录来存储他们的个人档案。例如：/home/zhang")])]),t._v(" "),s("tr",[s("td",[t._v("/lib")]),t._v(" "),s("td",[t._v("系统库；包含支持位于/bin和/sbin下的二进制文件的库文件.库文件名为 ld"),s("em",[t._v("或lib")]),t._v(".so.*；例如：ld-2.11.1.so，libncurses.so.5.7")])]),t._v(" "),s("tr",[s("td",[t._v("/media")]),t._v(" "),s("td",[t._v("可移动媒体设备；用于挂载可移动设备的临时目录。举例来说，挂载CD-ROM的/media/cdrom，挂载软盘驱动器的/media/floppy;")])]),t._v(" "),s("tr",[s("td",[t._v("/lib64")]),t._v(" "),s("td",[t._v("专用于x86_64系统上的辅助共享库文件存放位置")])]),t._v(" "),s("tr",[s("td",[t._v("/last+found")]),t._v(" "),s("td",[t._v("这个目录是使用标准的ext2/ext3档案系统格式才会产生的一个目录，目的在于当档案系统发生错误时，将一些遗失的片段放置到这个目录下。 这个目录通常会在分割槽的最顶层存在，例如你加装一个硬盘于/disk中，那在这个系统下就会自动产生一个这样的目录/disk/lost+found")])]),t._v(" "),s("tr",[s("td",[t._v("/mnt")]),t._v(" "),s("td",[t._v("挂载目录；临时安装目录，系统管理员可以挂载文件系统。")])]),t._v(" "),s("tr",[s("td",[t._v("/opt")]),t._v(" "),s("td",[t._v("可选的附加应用程序； opt代表可选的。包含从个别厂商的附加应用程序。附加应用程序应该安装在/opt/或者/opt/的子目录下")])]),t._v(" "),s("tr",[s("td",[t._v("/root")]),t._v(" "),s("td",[t._v("管理员")])]),t._v(" "),s("tr",[s("td",[t._v("/srv")]),t._v(" "),s("td",[t._v("服务数据； srv代表服务。包含服务器特定服务相关的数据。例如，/srv/cvs包含cvs相关的数据。")])]),t._v(" "),s("tr",[s("td",[t._v("/tmp")]),t._v(" "),s("td",[t._v("临时文件； 包含系统和用户创建的临时文件。当系统重新启动时，这个目录下的文件都将被删除")])]),t._v(" "),s("tr",[s("td",[t._v("/usr")]),t._v(" "),s("td",[t._v("用户程序；包含二进制文件、库文件、文档和二级程序的源代码。最庞大的目录，要用到的应用程序和文件几乎都在这个目录/usr/bin中包含用户程序的二进制文件。如果你在/bin中找不到用户二进制文件，到/usr/bin目录看看。例如：at、awk、cc、less、scp。 /usr/sbin中包含系统管理员的二进制文件。如果你在/sbin中找不到系统二进制文件，到/usr/sbin目录看看。例如：atd、cron、sshd、useradd、userdel。/usr/lib中包含了/usr/bin和/usr/sbin用到的库。/usr/local中包含了从源安装的用户程序。例如，当你从源安装Apache，它会在/usr/local/apache2中。")])]),t._v(" "),s("tr",[s("td",[t._v("/var")]),t._v(" "),s("td",[t._v("变量文件。这个目录下可以找到内容可能增长的文件。这包括 - 系统日志文件（/var/log）;包和数据库文件（/var/lib）;电子邮件（/var/mail）;打印队列（/var/spool）;锁文件（/var/lock）;多次重新启动需要的临时文件（/var/tmp）")])]),t._v(" "),s("tr",[s("td",[t._v("/sys")]),t._v(" "),s("td",[t._v("这个目录其实跟/proc非常类似，也是一个虚拟的档案系统，主要也是记录与核心相关的资讯。 包括目前已载入的核心模组与核心侦测到的硬体装置资讯等等。 这个目录同样不占硬盘容量。")])]),t._v(" "),s("tr",[s("td",[t._v("/proc")]),t._v(" "),s("td",[t._v("系统进程的相关信息。这是一个虚拟的文件系统，包含有关正在运行的进程的信息。例如：/proc/{pid}目录中包含的与特定pid相关的信息。这是一个虚拟的文件系统，系统资源以文本信息形式存在。例如：/proc/uptime")])])])])])}),[],!1,null,null,null);v.default=e.exports}}]);